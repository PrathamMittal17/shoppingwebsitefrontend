{"version":3,"sources":["slices/routeSlice.js","slices/loadUserSlice.js","Components/NavigationBar/Navigation.js","Components/ProductCard/ProductCard.js","slices/displaySlice.js","Components/Register/Register.js","Components/SignIn.js","Components/ProductCard/ProductCardList.js","slices/cartItemsTotalSlice.js","Components/Cart/CartItem.js","slices/canPaySlice.js","slices/radioSelectSlice.js","Components/Profile/Addresses/AddressCard.js","Components/Profile/Addresses/AddressForm.js","Components/Profile/Addresses/Addresses.js","Components/Cart/SelectAddress.js","Components/Cart/Cart.js","Components/Profile/Profile.js","Components/orderdone.js","Components/ProductCard/ProductDetails.js","Components/CategoryBar/CategoryBar.js","Components/CategoryPage.js","Components/Profile/Order.js","Components/Profile/MyOrders.js","Components/four_o_four/Four0Four.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["routeChangeSlice","createSlice","name","initialState","route","reducers","changeRoute","state","action","payload","actions","loadUserSlice","user","loadUserAccount","Object","assign","CustomToggle","React","forwardRef","ref","children","onClick","href","e","preventDefault","style","color","icon","faUser","fontSize","className","Navigation","cartItems","home","dispatch","useDispatch","useSelector","routeChange","history","useHistory","Navbar","backgroundColor","variant","expand","Container","Brand","as","Link","push","go","to","Toggle","Collapse","id","Nav","gap","display","justifyContent","alignItems","faShoppingCart","fontWeight","marginLeft","Dropdown","Menu","textAlign","margin","Item","padding","localStorage","removeItem","ProductCard","image","productName","price","handleOnClick","useCallback","Card","width","borderRadius","cursor","boxShadow","Img","height","objectFit","src","Body","Title","Subtitle","displaySlice","changeDisplay","Register","useState","email","setEmail","fname","setFname","lname","setLname","password","setPassword","emptyFname","setEmptyFname","emptyLname","setEmptyLname","emptyEmail","setEmptyEmail","emptyPassword","setemptyPassword","EmailBottomText","setEmailBottomText","PasswordBottomText","setPasswordBottomText","alreadyExists","setAlreadyExists","Form","Label","Group","controlId","Control","type","placeholder","onChange","event","target","value","Button","validator","isEmpty","isEmail","isStrongPassword","minLength","minLowercase","minNumbers","minSymbols","minUppercase","fetch","method","headers","body","JSON","stringify","then","data","json","catch","err","console","log","SignIn","setEmptyPassword","passwordBottomText","setPasswordText","rightDetails","setRightDetails","ProductCardList","products","userId","LoginForm","length","map","product","i","product_id","img","product_name","Spinner","animation","role","Alert","cartItemsTotalSlice","total","IncreaseTotal","DecreaseTotal","SetTotal","CartItem","index","quantity","custId","useContext","totalPriceContext","setTotalPrice","cartItemsContext","cartItemsData","setCartItemsData","qty","changeQty","useEffect","cartItemId","flexWrap","alt","flexDirection","wordBreak","size","totalPrice","Number","faPlus","faMinus","splice","item_id","customerId","operation","faTrashAlt","canPaySlice","canPay","setCanPay","radioSelectSlice","select","changeSelect","AddressCard","ad","addressSplit","split","addressContext","address","setAddress","Text","tempAddress","address_id","AddressForm","country","addContext","setAdd","setName","mobile","setMobile","pincode","useRef","houseNo","setHouseNo","area","setArea","city","setCity","setState","invalidPincode","setInvalidPincode","invalid","setInvalid","disabled","onInput","current","PostOffice","Block","State","getFromPincode","autoComplete","Select","marginTop","toString","createContext","Addresses","checkout","selectedAddress","add","componentMounted","Provider","marginBottom","Check","checked","isInvalid","SelectAddress","changeCanPay","sticky","amount","session","a","loadStripe","redirectToCheckout","sessionId","Cart","selectAddress","setSelectAddress","ListGroup","cart_item_id","Profile","Name","link","startDelay","text","typeSpeed","OrderDone","orderItems","keys","user_id","ProductDetails","useParams","productDetails","setDetails","load","setLoad","recommendedProduct","setrecommendedProduct","inCart","changeInCart","cartInfoStatus","setCartInfoStatus","window","scrollTo","productId","cart_status","values","forEach","Image","fluid","status","Tabs","defaultActiveKey","Tab","eventKey","title","about","CategoryBar","category","OverlayTrigger","rootClose","trigger","placement","overlay","Popover","Header","CategoryPage","productContext","setProducts","catContext","setChangeCategory","toLowerCase","response","OrderItem","date","slice","MyOrders","orders","setOrders","getItem","parse","Data","order","ListGroupItem","Order","order_id","Four0Four","App","changeCartTotal","loadUser","search","setSearch","changeCategory","setItem","cart_items","filteredProducts","filter","includes","exact","path","zIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9021eb6.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  route : 'loggedout',\r\n}\r\n\r\nexport const routeChangeSlice = createSlice({\r\n  name: 'routeChange',\r\n  initialState,\r\n  reducers: {\r\n   changeRoute: (state,action) => {\r\n      state.route = action.payload;\r\n      },\r\n    },\r\n}\r\n\r\n)\r\n\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { changeRoute} = routeChangeSlice.actions\r\n\r\nexport default routeChangeSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  user: {},\r\n}\r\n\r\nexport const loadUserSlice = createSlice({\r\n  name: 'loadUser',\r\n  initialState,\r\n  reducers: {\r\n   loadUserAccount: (state, action) => {\r\n      return Object.assign({},state,{\r\n          user:action.payload\r\n          })\r\n      },\r\n    },\r\n}\r\n\r\n)\r\n\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { loadUserAccount} = loadUserSlice.actions\r\n\r\nexport default loadUserSlice.reducer","import React from 'react'\r\nimport { Navbar,Nav,Container,Dropdown } from 'react-bootstrap';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { useSelector ,useDispatch} from 'react-redux';\r\nimport { changeRoute } from '../../slices/routeSlice';\r\nimport { loadUserAccount } from '../../slices/loadUserSlice';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser,faShoppingCart } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Navigation.css'\r\n\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <a\r\n      href=\"/dropdown\"\r\n      ref={ref}\r\n      onClick={e => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n      style={{color:'white'}}\r\n    >\r\n      <FontAwesomeIcon icon={faUser}  style={{fontSize:'1.75rem'}} className=\"hover-border\"/>\r\n      {children}\r\n    </a>\r\n  ));\r\n\r\nconst Navigation= ({cartItems,home=false}) => {\r\n    const dispatch = useDispatch();\r\n    const route = useSelector((state)=> state.routeChange.route);\r\n    const history = useHistory()\r\n\r\n\r\n    return(\r\n        <Navbar  style={{backgroundColor:\"#131921\"}} variant=\"dark\" expand=\"sm\">\r\n        <Container>\r\n        <Navbar.Brand as={Link} onClick={()=> {\r\n            if(home){\r\n                history.push(\"/\")\r\n                history.go(0)\r\n            }\r\n        }}to=\"/\"><span className=\"brand-name h4\">Thrifty<span className=\"box-text\">Box</span></span></Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" >\r\n            {route===\"loggedin\"\r\n            \r\n            ?\r\n            \r\n            <Nav className=\"ms-auto\" style={{gap:\"30px\",display:'flex',justifyContent:'center',alignItems:'center',}}>\r\n                <div style={{display:\"flex\"}} className=\"cart\">\r\n                    <Nav.Link as={Link} to=\"/cart\" style={{color:'white'}} className=\"hover-border\">\r\n                        <FontAwesomeIcon icon={faShoppingCart} style={{fontSize:'1.75rem'}} />\r\n                    </Nav.Link>\r\n                    <span style={{fontWeight:\"bold\",color:\"#F08804\",marginLeft:\"2.5px\"}}>{cartItems}</span>\r\n                </div>\r\n                    <Dropdown >\r\n                        <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\"/>\r\n                        \r\n                        <Dropdown.Menu style={{textAlign:'center',margin:\"15px -100px\"}}>\r\n\r\n                            <Dropdown.Item as={Link} to=\"/profile\" style={{color:'black',fontSize:'18px',padding:'10px'}} >\r\n                                    My Profile\r\n                            </Dropdown.Item>\r\n\r\n                            <Dropdown.Item as={Link}  style={{color:'black',fontSize:'18px',padding:'10px'}} to=\"\"onClick={()=>{\r\n                                    dispatch(loadUserAccount(' '));\r\n                                    dispatch(changeRoute(\"loggedout\"));\r\n                                    localStorage.removeItem(\"user\");\r\n                                    localStorage.removeItem(\"id\");\r\n                                    }} >\r\n                                    Sign Out\r\n                \r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n\r\n                    </Dropdown>\r\n                </Nav>\r\n            :\r\n           ''\r\n            }\r\n            \r\n        </Navbar.Collapse>\r\n        </Container>\r\n        </Navbar>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Navigation;","import React, {useCallback} from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport {useHistory} from 'react-router-dom';\r\nimport './ProductCard.css'\r\nconst ProductCard = ({id=0,image,productName,price}) => {\r\n    const history = useHistory();\r\n\r\n    const handleOnClick = useCallback(() => {\r\n        history.push(`/products/${id}`)\r\n    }, [history,id]);\r\n\r\n\r\n    return(\r\n        <Card className=\"productCard\"onClick={()=>handleOnClick()} style={{ width: '18rem', margin:'20px',borderRadius:\"15px\",cursor: \"pointer\",boxShadow:'0px 2px 0 0 #CBC6C6'}} >\r\n            <Card.Img style={{width:'100%',height:'30vh',objectFit:'scale-down',padding:'10px'}} variant=\"top\" src={image} />\r\n            <Card.Body >\r\n                <Card.Title>{productName}</Card.Title>\r\n                <Card.Subtitle>\r\n                Rs.{price}\r\n                </Card.Subtitle>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\nexport default ProductCard;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  display : ' ',\r\n}\r\n\r\nexport const displaySlice = createSlice({\r\n  name: 'changeDisplay',\r\n  initialState,\r\n  reducers: {\r\n   changeDisplay: (state,action) => {\r\n      state.display = action.payload;\r\n      },\r\n    },\r\n}\r\n\r\n)\r\n\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { changeDisplay} = displaySlice.actions\r\n\r\nexport default displaySlice.reducer","import React,{useState} from \"react\";\r\nimport { Form,Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport './Register.css'\r\nimport { loadUserAccount } from \"../../slices/loadUserSlice\";\r\nimport { changeRoute } from \"../../slices/routeSlice\";\r\nimport { changeDisplay } from \"../../slices/displaySlice\";\r\nimport validator from 'validator';\r\n\r\n\r\nconst Register=()=>{\r\n    /* eslint-disable no-unused-vars */\r\n\r\n    const[email,setEmail] = useState('');\r\n    const[fname,setFname] = useState('');\r\n    const[lname,setLname] = useState('');\r\n    const[password,setPassword] = useState('');\r\n\r\n    const[emptyFname,setEmptyFname] = useState(null);\r\n    const[emptyLname,setEmptyLname] = useState(null);\r\n    const[emptyEmail,setEmptyEmail] = useState(null);\r\n    const[emptyPassword,setemptyPassword] = useState(null);\r\n\r\n    const[EmailBottomText,setEmailBottomText] = useState(\"Email can't be empty\");\r\n    const[PasswordBottomText,setPasswordBottomText] = useState(\"Password can't be empty\");\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    const[alreadyExists,setAlreadyExists] = useState(null);\r\n\r\n\r\n    const submitRegister = ()=>{\r\n        if(validator.isEmpty(fname)){\r\n            setEmptyFname(true)\r\n        }\r\n\r\n        if(validator.isEmpty(lname)){\r\n            setEmptyLname(true)\r\n        }\r\n\r\n        if(validator.isEmpty(email)){\r\n            setEmptyEmail(true)\r\n            setEmailBottomText(\"Email can't be empty\")\r\n        }\r\n        else if(!validator.isEmail(email)){\r\n            setEmptyEmail(true)\r\n            setEmailBottomText(\"Invalid Email\")\r\n        }\r\n\r\n        if(validator.isEmpty(password)){\r\n            setemptyPassword(true)\r\n            setPasswordBottomText(\"Password can't be empty\")\r\n        }\r\n        else if(!validator.isStrongPassword(password,{\r\n            minLength:6,minLowercase:1,minNumbers:1,minSymbols:1,minUppercase:1\r\n        })){\r\n            setemptyPassword(true)\r\n            setPasswordBottomText(\"Invalid Password\")\r\n        }\r\n\r\n        else if(!emptyFname && (!emptyEmail && validator.isEmail(email)) && !emptyLname && (!emptyPassword &&\r\n            validator.isStrongPassword(password,{\r\n                minLength:6,minLowercase:1,minNumbers:1,minSymbols:1,minUppercase:1\r\n            })\r\n            )){\r\n                fetch(\"https://shopping-website-backend.adaptable.app/register\",{\r\n                    method:\"post\",\r\n                    headers:{'Content-Type':'application/json'},\r\n                    body:JSON.stringify({\r\n                        fname:fname,\r\n                        lname:lname,\r\n                        email:email,\r\n                        password:password\r\n                    })\r\n                })\r\n                .then(data=>data.json())\r\n                .then(user=>{\r\n                    if(user.id){\r\n                        dispatch(changeRoute(\"loggedin\"));\r\n                        dispatch(changeDisplay(' '));\r\n                        dispatch(loadUserAccount(user));\r\n        \r\n                    }\r\n                    else if(user==='Unable to register'){\r\n                        setAlreadyExists(true)\r\n                    }\r\n                    \r\n                    \r\n                })\r\n                .catch(err => console.log(err));\r\n                \r\n        }\r\n        \r\n        \r\n\r\n    }\r\n\r\n    const changeEmail = (event) =>{\r\n        setEmptyEmail(false)\r\n        setEmail(event.target.value);\r\n        setAlreadyExists(false)\r\n    }\r\n\r\n    const changeFname = (event) =>{\r\n        setEmptyFname(false)\r\n        setFname(event.target.value);\r\n        setAlreadyExists(false)\r\n    }\r\n    \r\n    const changeLname = (event) =>{\r\n        setEmptyLname(false)\r\n        setLname(event.target.value);\r\n        setAlreadyExists(false)\r\n    }\r\n\r\n    const changePassword = (event) =>{\r\n        setemptyPassword(false)\r\n        setPassword(event.target.value);\r\n        setAlreadyExists(false)\r\n    }\r\n\r\n   \r\n    return(\r\n        <Form >\r\n            {alreadyExists?<Form.Label><b>User already exists please Sign In</b></Form.Label>:\"\"}\r\n            <Form.Label><h4>Register</h4></Form.Label>\r\n            <Form.Group className=\"mb-3\" controlId=\"fname\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter First Name:\" onChange={changeFname} />\r\n            </Form.Group>\r\n            {emptyFname?<Form.Label><b>First Name can't be empty</b></Form.Label>:\"\"}\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"lname\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter Last Name:\" onChange={changeLname}/>\r\n            </Form.Group>\r\n            {emptyLname?<Form.Label><b>Last Name can't be empty</b></Form.Label>:\"\"}\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                <Form.Label>Email Address:</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter Email Address:\" onChange={changeEmail} />\r\n            </Form.Group>\r\n            {emptyEmail?<Form.Label><b>{EmailBottomText}</b></Form.Label>:\"\"}\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                <Form.Label>Password:</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Enter Password:\" onChange={changePassword}/>\r\n            </Form.Group>\r\n            {emptyPassword?<Form.Label><b>{PasswordBottomText}</b></Form.Label>:\"\"}\r\n            <Form.Label>• Minimum 6 letters</Form.Label>\r\n            <Form.Label>• Minium 1 Capital Letter </Form.Label>\r\n            <Form.Label>• Minium 1 Symbol</Form.Label>\r\n            <Form.Label>• Minium 1 Number</Form.Label>\r\n\r\n            <Button variant=\"primary\" onClick={submitRegister}>\r\n                Register\r\n            </Button>\r\n            <br/>\r\n            \r\n        </Form>\r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default Register;","import React,{useState} from \"react\";\r\nimport { Form,Button } from \"react-bootstrap\";\r\nimport './Register/Register.css';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loadUserAccount } from \"../slices/loadUserSlice\";\r\nimport { changeRoute } from \"../slices/routeSlice\";\r\nimport { changeDisplay } from \"../slices/displaySlice\";\r\nimport validator from 'validator';\r\n\r\nconst SignIn=()=>{\r\n\r\n    const[email,setEmail] = useState('');\r\n    const[password,setPassword] = useState('');\r\n    const[emptyEmail,setEmptyEmail] = useState(true);\r\n    const[emptyPassword,setEmptyPassword] = useState(true);\r\n    const[EmailBottomText,setEmailBottomText] = useState(\"\");\r\n    const[passwordBottomText,setPasswordText] = useState(\"\");\r\n    const[rightDetails,setRightDetails] = useState(true);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const changeEmail = (event) =>{\r\n        setEmptyEmail(false)\r\n        setEmail(event.target.value);\r\n        setRightDetails(true)\r\n    }\r\n\r\n    const changePassword = (event) =>{\r\n        setEmptyPassword(false)\r\n        setPassword(event.target.value);\r\n        setRightDetails(true)\r\n    }\r\n\r\n    const login = ()=>{\r\n        if(validator.isEmpty(email)){\r\n            setEmptyEmail(true)\r\n            setEmailBottomText(\"Email can't be empty\")\r\n        }\r\n        else if(!validator.isEmail(email)){\r\n            setEmptyEmail(true)\r\n            setEmailBottomText(\"Invalid Email\")\r\n        }\r\n        if(validator.isEmpty(password)){\r\n            setEmptyPassword(true)\r\n            setPasswordText(\"Password can't be empty\")\r\n        }\r\n\r\n        if((!emptyEmail && validator.isEmail(email)) && !validator.isEmpty(password)){\r\n            fetch(\"https://shopping-website-backend.adaptable.app/login\",{\r\n            method:\"post\",\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                email:email,\r\n                password:password\r\n            })\r\n        })\r\n        .then(data=>data.json())\r\n        .then(user=>{\r\n            if(user.id){\r\n                dispatch(changeRoute(\"loggedout\"));\r\n                dispatch(changeDisplay(' '));\r\n                dispatch(loadUserAccount(user));\r\n            }\r\n            else if(user==='wrong credentials'){\r\n                setRightDetails(false)\r\n            }\r\n        })\r\n        .catch(err => console.log('Request Failed'));\r\n    }\r\n\r\n\r\n        \r\n    }\r\n    return(\r\n        <Form >\r\n            \r\n            <Form.Label><h4>Sign In</h4></Form.Label>\r\n            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                <Form.Label>Email Address:</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter Email Address:\" onChange={changeEmail}/>\r\n            </Form.Group>\r\n            {emptyEmail?<Form.Label><b>{EmailBottomText}</b></Form.Label>:\"\"}\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                <Form.Label>Password:</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Enter Password:\" onChange={changePassword}/>\r\n            </Form.Group>\r\n            {emptyPassword?<Form.Label><b>{passwordBottomText}</b></Form.Label>:\"\"}\r\n\r\n            <Button variant=\"primary\" onClick={login}>Sign In</Button>\r\n            <br/>\r\n            {rightDetails?\"\":<Form.Label><b>Invalid Login Details</b></Form.Label>}\r\n\r\n        </Form>\r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default SignIn;","import React from 'react'\r\nimport { Spinner,Alert, Container } from 'react-bootstrap';\r\nimport ProductCard from './ProductCard';\r\nimport { changeDisplay } from '../../slices/displaySlice';\r\nimport { useDispatch,useSelector} from 'react-redux';\r\nimport './ProductCardList.css'\r\nimport Register from '../Register/Register';\r\nimport SignIn from '../SignIn';\r\nconst ProductCardList = ({products,userId=0}) => {\r\n    const display = useSelector((state)=>state.changeDisplay.display)\r\n\r\n    const dispatch = useDispatch();\r\n    let LoginForm =<SignIn/>;\r\n  \r\n    if(display===\"register\"){\r\n        console.log(display)\r\n        LoginForm=<Register/>\r\n    }\r\n    else if(display===\"signin\"){\r\n        LoginForm=<SignIn/>\r\n    }\r\n   \r\n\r\n    if(userId){\r\n    \r\n    \r\n    if(products){\r\n        if(products.length===0){\r\n\r\n            return (\r\n                <Container style={{display:'flex',alignItems:'center',justifyContent:'center'}}>\r\n                    <h1>No Products Found</h1>\r\n                </Container>\r\n            )\r\n        }\r\n        else{\r\n    return(\r\n        <div className=\"ProductCardList\">\r\n            {\r\n                products.map((product,i)=>{\r\n                    \r\n                    return <ProductCard\r\n                        key={products[i].product_id}\r\n                        id={products[i].product_id}\r\n                        image={products[i].img}\r\n                        productName={products[i].product_name}\r\n                        price={products[i].price}\r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n        \r\n    );\r\n        }\r\n        \r\n    }\r\n    \r\n    else{\r\n        return(\r\n            <div style={{textAlign:'center',padding:'100px'}}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n            </div>\r\n        );\r\n    }\r\n    }\r\n    else{\r\n        return (\r\n        <div>\r\n            <Alert variant=\"primary\" style={{textAlign:'center'}}>Please&ensp; \r\n            <Alert.Link onClick={()=>dispatch(changeDisplay('signin'))}>Sign In</Alert.Link>\r\n            <b>/</b>\r\n            <Alert.Link onClick={()=>dispatch(changeDisplay('register'))}>Register</Alert.Link>&ensp;First</Alert>\r\n            {LoginForm}\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductCardList;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  total : null,\r\n}\r\n\r\nexport const cartItemsTotalSlice = createSlice({\r\n  name: 'changeCartTotal',\r\n  initialState,\r\n  reducers: {\r\n   IncreaseTotal: (state) => {\r\n      state.total += 1;\r\n      },\r\n   DecreaseTotal: (state) => {\r\n        state.total -= 1;\r\n        },\r\n   SetTotal: (state,action) => {\r\n          state.total = action.payload;\r\n          },\r\n    },\r\n}\r\n\r\n)\r\n\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { IncreaseTotal,DecreaseTotal,SetTotal} = cartItemsTotalSlice.actions\r\n\r\nexport default cartItemsTotalSlice.reducer","import React, { useContext,useState,useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus,faMinus, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Button} from 'react-bootstrap';\r\nimport { cartItemsContext,totalPriceContext } from \"./Cart\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DecreaseTotal } from \"../../slices/cartItemsTotalSlice\";\r\nconst CartItem = ({index,id,productName,price,img,quantity,custId}) =>{\r\n    \r\n    \r\n    const [,setTotalPrice] = useContext(totalPriceContext);\r\n    const[cartItemsData,setCartItemsData] = useContext(cartItemsContext);\r\n    const dispatch = useDispatch();\r\n    const [qty,changeQty] = useState(quantity);\r\n    \r\n   \r\n    \r\n    \r\n    useEffect(()=>{\r\n        fetch(\"https://shopping-website-backend.adaptable.app/updatecartitemqty\",{\r\n                                method:\"put\",\r\n                                headers: {'Content-Type': 'application/json'},\r\n                                body:JSON.stringify({\r\n                                    cartItemId:id,\r\n                                    qty:qty\r\n\r\n                                })\r\n                            })\r\n                            .catch(err => console.log('Request Failed'));\r\n\r\n       },[qty,id])\r\n\r\n\r\n   \r\n\r\n   \r\n    const deleteCartItem = () =>{\r\n\r\n        cartItemsData.splice(index,1)\r\n        setCartItemsData(cartItemsData)\r\n        setTotalPrice(totalPrice=>totalPrice-(Number(price)*qty))\r\n        fetch(\"https://shopping-website-backend.adaptable.app/removecartitem\",{\r\n                method:\"delete\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    item_id:id\r\n                })\r\n            })\r\n\r\n       \r\n\r\n       \r\n            \r\n\r\n        fetch(\"https://shopping-website-backend.adaptable.app/carttotalitems\",{\r\n                method:\"put\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    \r\n                    customerId:custId,\r\n                    operation:\"D\"\r\n                    \r\n                })\r\n            })\r\n            .then(data=>data.json())\r\n            .then(dispatch(DecreaseTotal()))\r\n \r\n      \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div style={{display:\"flex\",flexWrap:\"wrap\"}}>\r\n                <img src={img} alt=\"item\" style={{margin:\"5px\",width:\"100px\",height:\"100px\",objectFit:'scale-down'}}/>\r\n                <div style={{display:\"flex\",flexDirection:\"column\",wordBreak:\"break-all\"}}>\r\n                    <h3 style={{margin:\"5px\"}}>{productName}</h3>\r\n                    <h3 style={{margin:\"5px\"}}>Rs.{price*qty}</h3>\r\n                </div>\r\n            </div>\r\n            <div style={{display:\"flex\",justifyContent:\"flex-end\",alignItems:\"center\"}}>\r\n                <Button size=\"sm\" variant=\"outline-primary\" style={{margin:\"20px\"}} onClick={()=>{\r\n                    if(qty<4){\r\n                        changeQty(qty+1)\r\n                        setTotalPrice(totalPrice=>totalPrice+Number(price))\r\n\r\n                        \r\n                    }\r\n\r\n                }}>\r\n                    <FontAwesomeIcon size=\"lg\" style={{fontSize:\"1rem\"}}icon={faPlus} />\r\n                </Button>\r\n                <h4>{qty}</h4>\r\n                <Button size=\"sm\" variant=\"outline-primary\" style={{margin:\"20px\"}} onClick={()=>{\r\n                    if(qty>1){\r\n                        changeQty(qty-1);\r\n                        setTotalPrice(totalPrice=>totalPrice-Number(price))\r\n                    }\r\n\r\n                       \r\n                }}>\r\n                        <FontAwesomeIcon size=\"lg\" style={{fontSize:\"1rem\"}}icon={faMinus} />\r\n                </Button>\r\n\r\n                <Button size=\"md\" variant=\"outline-danger\" style={{margin:\"10px\"}} onClick={deleteCartItem}>\r\n                    <FontAwesomeIcon size=\"lg\" style={{fontSize:\"1rem\"}}icon={faTrashAlt} />\r\n                </Button>\r\n                \r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CartItem;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  canPay : false,\r\n}\r\n\r\nexport const canPaySlice = createSlice({\r\n  name: 'canPayControl',\r\n  initialState,\r\n  reducers: {\r\n   \r\n   setCanPay: (state,action) => {\r\n          state.canPay = action.payload;\r\n          },\r\n    },\r\n}\r\n\r\n)\r\n\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {setCanPay} = canPaySlice.actions\r\n\r\nexport default canPaySlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  select : false,\r\n}\r\n\r\nexport const radioSelectSlice = createSlice({\r\n  name: 'radioSelect',\r\n  initialState,\r\n  reducers: {\r\n   changeSelect: (state,action) => {\r\n      state.select = action.payload;\r\n      },\r\n    },\r\n}\r\n\r\n)\r\n\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { changeSelect} = radioSelectSlice.actions\r\n\r\nexport default radioSelectSlice.reducer","import React, { useContext } from \"react\";\r\nimport { Card,Button } from \"react-bootstrap\";\r\nimport { addressContext } from \"./Addresses\";\r\nimport { faTrashAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst AddressCard = ({index,ad,id=0}) => {\r\n    const addressSplit = ad.split(\"\\n\")\r\n    const[address,setAddress] = useContext(addressContext);\r\n\r\n    const deleteAddress = () => {\r\n        const tempAddress=[...address]\r\n        tempAddress.splice(index,1);\r\n        setAddress(tempAddress);\r\n        fetch(\"https://shopping-website-backend.adaptable.app/deleteAddress\",{\r\n                method:\"delete\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    address_id:id\r\n                })\r\n            })\r\n        \r\n    }\r\n\r\n  \r\n        return(\r\n            <Card style={{ width: '30rem',borderRadius:\"10px\",boxShadow:'1px 2px 0 0 #CBC6C6'}} key={index}>\r\n                <Card.Body>\r\n                    <Card.Subtitle style={{fontWeight:'bold'}}>{addressSplit[0]}</Card.Subtitle>\r\n                    <Card.Text>{addressSplit[1]}<br/>{addressSplit[2]}<br/>{addressSplit[3]}<br/>{addressSplit[4]}<br/>{addressSplit[5]}</Card.Text>\r\n                </Card.Body>\r\n                <div style={{display:'flex',justifyContent:'flex-end',alignItems:'center'}}>\r\n                    <Button size=\"md\" variant=\"outline-danger\" style={{margin:\"10px\"}} onClick={deleteAddress}>\r\n                            <FontAwesomeIcon size=\"lg\" style={{fontSize:\"1rem\"}}icon={faTrashAlt} />\r\n                    </Button>\r\n                </div>\r\n            </Card>\r\n        )\r\n    \r\n}\r\n\r\nexport default AddressCard;","import React,{useState,useRef, useContext} from \"react\";\r\nimport { Form,Container,Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setCanPay } from \"../../../slices/canPaySlice\";\r\nimport { addressContext,addContext } from \"./Addresses\";\r\n\r\nconst AddressForm = ({userId=0}) => {\r\n    const[,setAddress] = useContext(addressContext)\r\n    const country = \"India\";\r\n    const[,setAdd] = useContext(addContext);\r\n    const[name,setName] = useState('');\r\n    const[mobile,setMobile] = useState('');\r\n    const pincode = useRef('');\r\n    const[houseNo,setHouseNo] = useState('');\r\n    const[area,setArea] = useState('');\r\n    const[city,setCity] = useState('');\r\n    const[state,setState] = useState('');\r\n    const[invalidPincode,setInvalidPincode] = useState(false);\r\n    const[invalid,setInvalid] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const getFromPincode = (pincode) =>{\r\n        fetch(`https://api.postalpincode.in/pincode/${pincode}`)\r\n        .then(data=>data.json())\r\n        .then(data=>{\r\n            if(data[0].PostOffice){\r\n                setCity(data[0].PostOffice[0].Block)\r\n                setState(data[0].PostOffice[0].State)\r\n            }\r\n            else{\r\n                setInvalidPincode(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    const addAddress=()=>{\r\n        if(name.length>0 && mobile.toString().length>0 && pincode.current.length>0 && !invalidPincode && houseNo.length>0 && area.length>0  && city.length>0 ) {\r\n            setInvalid(false)\r\n            setAdd(false)\r\n            const address = `${name}\\n${houseNo}\\n${area}\\n${city},${state} ${pincode.current}\\n${country}\\nPhone Number: ${mobile}`\r\n            \r\n\r\n            fetch(\"https://shopping-website-backend.adaptable.app/addAddresses\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    \r\n                  customerId:userId,\r\n                  address:address\r\n                    \r\n                })\r\n            })\r\n            .then(data=>data.json())\r\n            .then(data=>setAddress(current => [{\"address_id\":data,\"address\":address},...current]))\r\n            .then(dispatch(setCanPay(true)))\r\n            \r\n        }\r\n        else{\r\n            setInvalid(true)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Container className=\"addressForm\">\r\n            <div style={{textAlign:'left',margin:\"20px 0px 20px 0\"}}>\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label style={{fontWeight:\"bold\"}}>Country</Form.Label>\r\n                    <Form.Control type=\"text\" value={country} disabled/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label style={{fontWeight:\"bold\"}}>Full Name</Form.Label>\r\n                    <Form.Control  type=\"text\" onChange={(event)=>setName(event.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label style={{fontWeight:\"bold\"}}>Phone Number</Form.Label>\r\n                    <Form.Control  type=\"text\" onChange={(event)=>setMobile(event.target.value)}/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label style={{fontWeight:\"bold\"}}>Pincode</Form.Label>\r\n                    <Form.Control  type=\"text\" onInput={(event)=>{\r\n                        setCity('')\r\n                        setState('')\r\n                        pincode.current =  event.target.value\r\n                        if(pincode.current.length===6){\r\n                            getFromPincode(pincode.current)\r\n                        }\r\n                        setInvalidPincode(false)\r\n                    }}/>\r\n                    {invalidPincode?<Form.Text style={{fontWeight:\"bold\"}}>Invalid Pincode</Form.Text>:\"\"}\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label style={{fontWeight:\"bold\"}}>Flat, House no., Building, Company, Apartment</Form.Label>\r\n                    <Form.Control  type=\"text\" onChange={(event)=>setHouseNo(event.target.value)} autoComplete=\"none\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label style={{fontWeight:\"bold\"}}>Area, Street, Sector, Village</Form.Label>\r\n                    <Form.Control  type=\"text\" onChange={(event)=>setArea(event.target.value)} autoComplete=\"none\"/>\r\n                </Form.Group>\r\n                \r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label style={{fontWeight:\"bold\"}}>Town/City</Form.Label>\r\n                    <Form.Control  type=\"text\" value={city} onChange={(event)=>setCity(event.target.value)} autoComplete=\"none\"/>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label style={{fontWeight:\"bold\"}}>State</Form.Label>\r\n                    <Form.Select value={state} onChange={(event)=>setState(event.target.value)} autoComplete=\"none\">\r\n                        <option value=\"Select Your State\">Select Your State</option>\r\n                        <option value=\"Andaman and Nicobar Islands\">Andaman and Nicobar Islands</option>\r\n                        <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\r\n                        <option value=\"Arunachal Pradesh\">Arunachal Pradesh</option>\r\n                        <option value=\"Assam\">Assam</option>\r\n                        <option value=\"Bihar\">Bihar</option>\r\n                        <option value=\"Chandigarh\">Chandigarh</option>\r\n                        <option value=\"Chhattisgarh\">Chhattisgarh</option>\r\n                        <option value=\"Dadra and Nagar Haveli\">Dadra and Nagar Haveli</option>\r\n                        <option value=\"Daman and Diu\">Daman and Diu</option>\r\n                        <option value=\"Delhi\">Delhi</option>\r\n                        <option value=\"Goa\">Goa</option>\r\n                        <option value=\"Gujarat\">Gujarat</option>\r\n                        <option value=\"Haryana\">Haryana</option>\r\n                        <option value=\"Himachal Pradesh\">Himachal Pradesh</option>\r\n                        <option value=\"Jammu and Kashmir\">Jammu and Kashmir</option>\r\n                        <option value=\"Jharkhand\">Jharkhand</option>\r\n                        <option value=\"Karnataka\">Karnataka</option>\r\n                        <option value=\"Kerala\">Kerala</option>\r\n                        <option value=\"Ladakh\">Ladakh</option>\r\n                        <option value=\"Lakshadweep\">Lakshadweep</option>\r\n                        <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\r\n                        <option value=\"Maharashtra\">Maharashtra</option>\r\n                        <option value=\"Manipur\">Manipur</option>\r\n                        <option value=\"Meghalaya\">Meghalaya</option>\r\n                        <option value=\"Mizoram\">Mizoram</option>\r\n                        <option value=\"Nagaland\">Nagaland</option>\r\n                        <option value=\"Odisha\">Odisha</option>\r\n                        <option value=\"Puducherry\">Puducherry</option>\r\n                        <option value=\"Punjab\">Punjab</option>\r\n                        <option value=\"Rajasthan\">Rajasthan</option>\r\n                        <option value=\"Sikkim\">Sikkim</option>\r\n                        <option value=\"Tamil Nadu\">Tamil Nadu</option>\r\n                        <option value=\"Telangana\">Telangana</option>\r\n                        <option value=\"Tripura\">Tripura</option>\r\n                        <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\r\n                        <option value=\"Uttarakhand\">Uttarakhand</option>\r\n                        <option value=\"West Bengal\">West Bengal</option>\r\n                    </Form.Select>\r\n                </Form.Group>\r\n                {invalid ? <h6 style={{fontWeight:\"bold\",textAlign:'center',marginTop:\"10px\"}}>Fill all the details</h6> : \"\"}\r\n\r\n                <Button onClick={addAddress}>Add Address</Button>\r\n\r\n                \r\n            </div>\r\n        </Container>\r\n        );\r\n}\r\n\r\nexport default AddressForm;","import React, { useState, useEffect, createContext} from \"react\";\r\nimport { Button,Spinner,Form } from \"react-bootstrap\";\r\nimport { useDispatch} from \"react-redux\";\r\nimport { setCanPay } from \"../../../slices/canPaySlice\";\r\nimport { changeSelect } from \"../../../slices/radioSelectSlice\";\r\nimport './address.css'\r\nimport AddressCard from \"./AddressCard\";\r\nimport AddressForm from \"./AddressForm\";\r\nconst addressContext = createContext();\r\nconst addContext = createContext();\r\n\r\nconst Addresses = ({userId=0,checkout=false,selectedAddress}) => {\r\n    const[address,setAddress] = useState(null);\r\n    const[add,setAdd] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        let componentMounted = true;\r\n\r\n        fetch(\"https://shopping-website-backend.adaptable.app/getAddresses\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    \r\n                  customerId:userId\r\n                    \r\n                })\r\n            })\r\n            .then(data=>data.json())\r\n            .then(data=>{\r\n                if(componentMounted){\r\n                    setAddress(data)\r\n                }\r\n            })\r\n\r\n            return () => {\r\n                componentMounted = false;\r\n               }\r\n    },[userId])\r\n\r\n   \r\n    \r\n\r\n    if(!add){\r\n        if(address){\r\n            if(address.length>0){\r\n                dispatch(setCanPay(true))\r\n\r\n                return(\r\n                <div>\r\n                    <div style={{display:'flex',justifyContent:'center',margin:'30px 0'}}>\r\n                        <Button onClick={()=>{\r\n                        setAdd(true)\r\n                        dispatch(setCanPay(false))\r\n                        } }>Add Address</Button>\r\n                    </div>\r\n                    {checkout ? \r\n                     <div>\r\n                     {address.map((ad,index)=>{\r\n                         return(\r\n                        <div key={index}> \r\n                            \r\n                            <div style={{display:'flex',alignItems:'center',justifyContent:'center',gap:'20px',marginBottom:'20px',padding:'10px'}} key={index+1}>\r\n                                    {\r\n                                        index===0 ? <Form.Check type=\"radio\" name=\"selectAddress\" key={index+2} checked={selectedAddress===false} isInvalid onChange={()=>{\r\n                                            dispatch(changeSelect(false))\r\n                                        }}/> :\r\n                                        <Form.Check type=\"radio\" name=\"selectAddress\" key={index+2} isInvalid onChange={()=>{\r\n                                            dispatch(changeSelect(true))\r\n                                        }}/>\r\n                                    }\r\n                                    \r\n                                <addressContext.Provider value={[address,setAddress]} key={index+3}>\r\n                                        <AddressCard index={index} ad={ad.address} id={ad.address_id} key={index+4} />\r\n                                </addressContext.Provider>\r\n                            </div>\r\n                         </div>\r\n                         \r\n                         );\r\n                         \r\n                        })}\r\n                    </div>\r\n                     : \r\n                    <div className=\"AddressList\">\r\n                        {address.map((ad,index)=>{\r\n                            return(\r\n                            <addressContext.Provider value={[address,setAddress]} key={index+1}>\r\n                                    <AddressCard index={index} ad={ad.address} id={ad.address_id} key={index+2} />\r\n                            </addressContext.Provider>\r\n                            \r\n                            );\r\n                            \r\n                        })}\r\n                    </div>\r\n                    }\r\n                </div>\r\n                );\r\n            }\r\n            else{\r\n                dispatch(setCanPay(false))\r\n                return(\r\n                    <>\r\n                    <div style={{display:'flex',justifyContent:'center',margin:'30px 0'}}>\r\n                        <Button onClick={()=>setAdd(true)}>Add Address</Button>\r\n                    </div>\r\n                    <h4 style={{textAlign:'center'}}>You have no addresses added</h4>\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n        else{\r\n            return(\r\n                <div style={{textAlign:'center',padding:'100px'}}>\r\n                    <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                    </Spinner>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n    else{\r\n        return(\r\n            <addressContext.Provider value={[address,setAddress]}>\r\n                <addContext.Provider value={[add,setAdd]}>\r\n                    <AddressForm userId={userId}/>\r\n                </addContext.Provider>\r\n            </addressContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Addresses;\r\nexport {addressContext};\r\nexport {addContext};","import React from \"react\";\r\nimport { Button, Navbar } from \"react-bootstrap\";\r\nimport Addresses from \"../Profile/Addresses/Addresses\";\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SelectAddress = ({userId=0,totalPrice=0}) => {\r\n    \r\n    \r\n    \r\n    const select = useSelector((state)=>state.changeSelect.select)\r\n    const canPay = useSelector((state)=>state.changeCanPay.canPay)\r\n    \r\n    return(\r\n        <div>\r\n            <Navbar  sticky=\"top\" expand=\"lg\" style={{display:'flex',justifyContent:'center',backgroundColor:\"#131921\",padding:\"10px\",marginBottom:'30px' }}>\r\n                        \r\n                        <h3 id=\"totalPrice\" style={{color:\"white\"}}>Total: Rs.{totalPrice}</h3>\r\n                        <Button type=\"submit\" disabled={!canPay} style={{marginLeft:\"10px\"}} onClick={()=>{\r\n                                fetch(\"https://shopping-website-backend.adaptable.app/create-checkout-session\",{\r\n                                    method:\"post\",\r\n                                    headers: {'Content-Type': 'application/json'},\r\n                                    body:JSON.stringify({\r\n                                        amount:totalPrice*100\r\n                                    })\r\n                                })\r\n                                .then(data=>data.json())\r\n                                .then(async session=>{\r\n                                    const stripe = await loadStripe('pk_test_51JmIXVSBM1qtXmvlx74yuerGEmGuKSxOQ7Ej0XDdZrpZQFasZ4XObY9hCWjeQEXA5GDH1QBgPShHtdlKKJBBYCE400KZp54zhq');\r\n                                    stripe.redirectToCheckout({sessionId:session.id})\r\n                                    \r\n                                }\r\n                                )\r\n                            \r\n                        }}>Payment</Button>\r\n                \r\n                    </Navbar>\r\n            <h4 style={{textAlign:'center'}}>Select an Address</h4>\r\n                \r\n                    <Addresses userId={userId} checkout={true} selectedAddress={select}/>\r\n            \r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SelectAddress;\r\n","import React,{useState,useEffect, createContext} from \"react\";\r\nimport CartItem from \"./CartItem\";\r\nimport { ListGroup,Button,Spinner,Navbar } from \"react-bootstrap\";\r\nimport SelectAddress from \"./SelectAddress\";\r\nconst totalPriceContext = createContext();\r\nconst cartItemsContext = createContext();\r\nconst Cart = ({customerId=0}) =>{\r\n\r\n    const[cartItemsData,setCartItemsData] = useState(null);\r\n    const[totalPrice,setTotalPrice] = useState(0);\r\n    const[selectAddress,setSelectAddress] = useState(false);\r\n    useEffect(() => {\r\n        let componentMounted = true;\r\n\r\n        fetch(\"https://shopping-website-backend.adaptable.app/cartitem\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    customerId:customerId\r\n                })\r\n            })\r\n            .then(data=>data.json())\r\n            .then(product=>{\r\n                if(componentMounted){\r\n                    setCartItemsData(product)\r\n                }\r\n            })\r\n            .catch(err => console.log('Request Failed'))\r\n            return () => {\r\n                componentMounted = false;\r\n               }\r\n\r\n        }, [customerId]);\r\n\r\n    \r\n\r\n    if(cartItemsData){\r\n            if(cartItemsData.length>0){\r\n                if(selectAddress){\r\n                    return(<SelectAddress userId={customerId} totalPrice={totalPrice}/>)\r\n                }\r\n                else{\r\n                return(\r\n                <div>\r\n                    <Navbar  sticky=\"top\" expand=\"lg\" style={{display:'flex',justifyContent:'center',backgroundColor:\"#131921\",padding:\"10px\" }}>\r\n                        \r\n                        <h3 id=\"totalPrice\" style={{color:\"white\"}}>Total: Rs.{totalPrice}</h3>\r\n                        <Button type=\"submit\" style={{marginLeft:\"10px\"}} onClick={()=>{\r\n                            setSelectAddress(true)\r\n                        }}>Checkout</Button>\r\n                \r\n                    </Navbar>\r\n                <ListGroup style={{padding:\"5px\"}}>\r\n                    \r\n\r\n                {cartItemsData.map((product,i)=>{\r\n                    if(totalPrice===0){\r\n                        setTotalPrice(totalPrice=>totalPrice+(cartItemsData[i].price*cartItemsData[i].qty))\r\n                    }\r\n\r\n                        return (\r\n                            \r\n                            <ListGroup.Item key={i} style={{borderRadius:\"15px\",boxShadow:'1px 2px 0 0 #CBC6C6'}}>\r\n                                \r\n                                        <totalPriceContext.Provider value={[totalPrice,setTotalPrice]}>\r\n                                            <cartItemsContext.Provider value={[cartItemsData,setCartItemsData]}>\r\n                                                <CartItem\r\n                                                    index = {i}\r\n                                                    key={cartItemsData[i].cart_item_id}\r\n                                                    id={cartItemsData[i].cart_item_id}\r\n                                                    productName={cartItemsData[i].product_name}\r\n                                                    price={cartItemsData[i].price}\r\n                                                    img = {cartItemsData[i].img}\r\n                                                    quantity = {cartItemsData[i].qty}\r\n                                                    custId={customerId}\r\n                                                />\r\n                                            </cartItemsContext.Provider>\r\n                                        </totalPriceContext.Provider>\r\n                                \r\n                            \r\n                    </ListGroup.Item>\r\n                    \r\n                    );\r\n\r\n                \r\n                })\r\n        }\r\n\r\n        \r\n\r\n    </ListGroup>\r\n    </div>\r\n    \r\n    );\r\n                }\r\n\r\n    }\r\n    else if(cartItemsData.length===0){\r\n        return <h1 style={{textAlign:\"center\"}}>Cart is empty</h1>;\r\n    }\r\n\r\n    \r\n}\r\nelse{\r\n    return (\r\n        <div style={{textAlign:'center',padding:'100px'}}>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n       \r\n        \r\n       \r\n    \r\n}\r\n\r\n\r\nexport default Cart;\r\nexport {totalPriceContext};\r\nexport {cartItemsContext};","import React, { useCallback } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TypeWriterEffect from 'react-typewriter-effect';\r\n\r\n\r\nconst Profile = ({Name}) =>{\r\n    const history = useHistory();\r\n\r\n    const handleOnClick = useCallback((link) => {\r\n        history.push(link)\r\n    }, [history]);\r\n    return(\r\n       \r\n        <div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",padding:\"20px\"}}>\r\n            <TypeWriterEffect\r\n            startDelay={50}\r\n            text={`Hey, ${Name}`}\r\n            typeSpeed={100}\r\n            />\r\n            \r\n            <div style={{display:'flex',flexDirection:'column'}}>\r\n            <Button style={{marginTop:\"20px\"}}onClick={()=>handleOnClick(\"myorders\")}>Your Orders</Button>\r\n            <Button style={{marginTop:\"20px\"}}onClick={()=>handleOnClick(\"myaddresses\")}>Your Addresses</Button>\r\n            </div>           \r\n           \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Profile;","import React,{useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SetTotal } from '../slices/cartItemsTotalSlice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\nconst OrderDone=({userId=0})=>{\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        \r\n        const orderItems = {};\r\n        fetch(\"https://shopping-website-backend.adaptable.app/cartitem\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    customerId:userId\r\n                })\r\n            })\r\n        .then(data=>data.json())\r\n        .then(cartItems=>{\r\n            Object.assign(orderItems,cartItems)\r\n        Object.keys(orderItems).map((i)=>{\r\n                    return fetch(\"https://shopping-website-backend.adaptable.app/creatingOrder\",{\r\n                        method:\"post\",\r\n                        headers: {'Content-Type': 'application/json'},\r\n                        body:JSON.stringify({\r\n                            custId:userId,\r\n                            productName:orderItems[i].product_name,\r\n                            qty:orderItems[i].qty,\r\n                            price:orderItems[i].price*orderItems[i].qty,\r\n                            img:orderItems[i].img,\r\n                            \r\n                        })\r\n                    })\r\n                })\r\n            \r\n        })\r\n        .then(\r\n            fetch(\"https://shopping-website-backend.adaptable.app/deleteCart\",{\r\n            method:\"delete\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            body:JSON.stringify({\r\n                user_id:userId\r\n            })\r\n        }))\r\n        .then(\r\n            fetch(\"https://shopping-website-backend.adaptable.app/carttotalitems\",{\r\n            method:\"put\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            body:JSON.stringify({\r\n                customerId:userId,\r\n                operation:'E'\r\n            })\r\n        })\r\n        .then(data=>data.json())\r\n        .then(data=>dispatch(SetTotal(0)))\r\n        \r\n        )\r\n        \r\n        .catch(err => console.log('Request Failed'));\r\n    }, [userId,dispatch])\r\n    return(\r\n        <>\r\n            <h1 style={{textAlign:\"center\",padding:'20px'}}>Your Order Is successful</h1>\r\n            <Link to=\"/\"><h2 style={{textAlign:\"center\"}}>Continue Shopping</h2></Link>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrderDone;","import {Button, Image,Tab,Tabs,Spinner} from 'react-bootstrap';\r\nimport React, { useEffect,useState } from 'react'\r\nimport './ProductDetails.css'\r\nimport { useDispatch } from 'react-redux';\r\nimport ProductCard from './ProductCard';\r\nimport { IncreaseTotal } from '../../slices/cartItemsTotalSlice';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ProductDetails = ({userId}) =>{\r\n    const {id} = useParams();\r\n    const[productDetails,setDetails] = useState(null);\r\n    const[load,setLoad] = useState(false)\r\n    const [recommendedProduct,setrecommendedProduct] = useState([])\r\n    const [inCart,changeInCart] = useState(true);\r\n    const[cartInfoStatus,setCartInfoStatus] = useState(false)\r\n    const dispatch = useDispatch();\r\n    \r\n    \r\n    \r\n    useEffect(()=>{\r\n        \r\n        window.scrollTo(0, 0)\r\n        fetch(\"https://shopping-website-backend.adaptable.app/getitemcartstatus\",{\r\n            method:\"post\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            body:JSON.stringify({\r\n                customerId:userId,\r\n                productId:id\r\n                \r\n               })\r\n        })\r\n        .then(data=>data.json())\r\n        .then(data=>{\r\n            if(data.cart_status==='T'){\r\n                changeInCart(true)\r\n            }\r\n            else{\r\n                changeInCart(false)\r\n            }\r\n            setCartInfoStatus(true)\r\n        })\r\n\r\n        fetch(\"https://shopping-website-backend.adaptable.app/getProductDetailsFull\",{\r\n            method:\"post\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            body:JSON.stringify({\r\n                productId:id\r\n            })\r\n        })\r\n        .then(data=>data.json())\r\n        .then(data=>setDetails(data))\r\n\r\n\r\n        fetch(\"https://shopping-website-backend.adaptable.app/recommend\",{\r\n            method:\"post\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            body:JSON.stringify({\r\n                'productId':id\r\n            })\r\n        })\r\n        .then(data=>data.json())\r\n        .then(data=>Object.values(data).forEach((id) => {\r\n            fetch(\"https://shopping-website-backend.adaptable.app/getProductDetailsHalf\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    productId:id\r\n                })\r\n            })\r\n            .then(data=>data.json())\r\n            .then(data=>setrecommendedProduct(current => [...current, data]));\r\n        }))\r\n        return () => {\r\n            setrecommendedProduct([])\r\n            setDetails(\"\")\r\n            setLoad(false)\r\n            setCartInfoStatus(false)\r\n        }\r\n    },[id,userId])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(recommendedProduct.length===5 && productDetails && cartInfoStatus){\r\n            setLoad(true)\r\n        }\r\n    },[recommendedProduct.length,productDetails,cartInfoStatus])\r\n\r\n    \r\n    const addToCart=()=>{\r\n        changeInCart(true)\r\n        if(userId){\r\n            fetch(\"https://shopping-website-backend.adaptable.app/cart\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    productId:id,\r\n                    customerId:userId,\r\n                    status:'T'\r\n                })\r\n            })\r\n\r\n            fetch(\"https://shopping-website-backend.adaptable.app/carttotalitems\",{\r\n                method:\"put\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    \r\n                    customerId:userId,\r\n                    operation:\"I\"\r\n                    \r\n                })\r\n            })\r\n            .then(data=>data.json())\r\n            .then(dispatch(IncreaseTotal()))\r\n            \r\n        }\r\n    }\r\n    \r\n  \r\n    if(load){\r\n    return(\r\n        <div style={{padding:'20px'}}>\r\n            <div style={{display:'flex',alignItems:'center',flexDirection:'column'}}>\r\n                <p className='name'>{productDetails.product_name}</p>\r\n                <Image width=\"230px\" src={productDetails.img}  fluid alt=\"Product Image\"/>\r\n                <div className=\"buttons\">\r\n                    <p className=\"price\">Price: Rs.{productDetails.price}</p>\r\n                    {inCart ? \r\n                    <Button disabled={true} variant=\"dark\">Item in Cart</Button> :\r\n                    <Button disabled={false} variant=\"primary\" onClick={addToCart}>Add to Cart</Button>}\r\n                </div>\r\n                <Tabs defaultActiveKey=\"about\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\r\n                    <Tab eventKey=\"about\" title=\"About \">\r\n                        <p className='about'>{productDetails.about}</p>\r\n                    </Tab>\r\n                    <Tab eventKey=\"recommended\" title=\"More Like This\">\r\n                        <div className='RecommendedList'>\r\n                           {\r\n                           recommendedProduct.map((product,)=>{\r\n                                return <ProductCard \r\n                                id={product.product_id}\r\n                                image = {product.img}\r\n                                productName = {product.product_name}\r\n                                price={product.price}\r\n                                key={product.product_id}\r\n\r\n                                />\r\n                        \r\n                            })\r\n                            \r\n                            \r\n                                \r\n                           \r\n                        }\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n    else{\r\n        return(\r\n        <div style={{textAlign:'center',padding:'100px'}}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductDetails;","import React,{useCallback} from \"react\";\r\nimport {Container, OverlayTrigger,Popover } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport'./CategoryBar.css'\r\n\r\n\r\nconst CategoryBar = () => {\r\n    const history = useHistory();\r\n\r\n    const handleOnClick = useCallback((category) => {\r\n        history.push(`/category/${category}`)\r\n    }, [history]);\r\n\r\n  \r\n\r\n   \r\n\r\n    return(\r\n        <div style={{backgroundColor:\"#232F3E\",color:'white'}}>\r\n            <Container>\r\n                <div className=\"cat-list\" >\r\n                    <span className=\"cat-select\" onClick={()=>handleOnClick(\"audio\")}>Audio Devices</span>\r\n                    <span className=\"cat-select\" onClick={()=>handleOnClick(\"computeraccessories\")}>Computer Accessories</span>\r\n                    <span className=\"cat-select\" onClick={()=>handleOnClick(\"furniture\")}>Furniture</span>\r\n                    <span className=\"cat-select\" onClick={()=>handleOnClick(\"mobilephones\")}>Mobile Phones</span>\r\n                    <span className=\"cat-select\" onClick={()=>handleOnClick(\"stationery\")}>Stationery</span>\r\n                    <OverlayTrigger\r\n                        rootClose\r\n                        trigger=\"click\"\r\n                        key={'bottom'}\r\n                        placement={'bottom'}\r\n                        overlay={\r\n                            <Popover className=\"mobile-categories\">\r\n                                <Popover.Header as=\"h3\">{\"All Categories\"}</Popover.Header>\r\n                                <Popover.Body className=\"list-item\" onClick={()=>handleOnClick(\"audio\")}><h6>Audio Devices</h6></Popover.Body>\r\n                                <Popover.Body className=\"list-item\" onClick={()=>handleOnClick(\"computeraccessories\")}><h6>Computer Accessories</h6></Popover.Body>\r\n                                <Popover.Body className=\"list-item\" onClick={()=>handleOnClick(\"furniture\")}><h6>Furniture</h6></Popover.Body>\r\n                                <Popover.Body className=\"list-item\" onClick={()=>handleOnClick(\"mobilephones\")}><h6>Mobile Phones</h6></Popover.Body>\r\n                                <Popover.Body className=\"list-item\" onClick={()=>handleOnClick(\"smartwearables\")}><h6>Smart Wearables</h6></Popover.Body>\r\n                                <Popover.Body className=\"list-item\" onClick={()=>handleOnClick(\"stationery\")}><h6>Stationery</h6></Popover.Body>\r\n                            </Popover>\r\n                        }\r\n                        >\r\n                    <span className=\"cat-select mobile-categories \"><b>Explore All Categories</b></span>\r\n                    </OverlayTrigger>\r\n\r\n                    <OverlayTrigger\r\n                        rootClose\r\n                        trigger=\"click\"\r\n                        key={'right'}\r\n                        placement={'right'}\r\n                        overlay={\r\n                            <Popover className=\"big-cats\">\r\n                                <Popover.Header as=\"h3\">{\"All Categories\"}</Popover.Header>\r\n                                <Popover.Body className=\"list-item\" onClick={()=>handleOnClick(\"audio\")}><h6>Audio Devices</h6></Popover.Body>\r\n                                <Popover.Body className=\"list-item\" onClick={()=>handleOnClick(\"computeraccessories\")}><h6>Computer Accessories</h6></Popover.Body>\r\n                                <Popover.Body className=\"list-item\" onClick={()=>handleOnClick(\"furniture\")}><h6>Furniture</h6></Popover.Body>\r\n                                <Popover.Body className=\"list-item\" onClick={()=>handleOnClick(\"mobilephones\")}><h6>Mobile Phones</h6></Popover.Body>\r\n                                <Popover.Body className=\"list-item\" onClick={()=>handleOnClick(\"smartwearables\")}><h6>Smart Wearables</h6></Popover.Body>\r\n                                <Popover.Body className=\"list-item\" onClick={()=>handleOnClick(\"stationery\")}><h6>Stationery</h6></Popover.Body>\r\n                            </Popover>\r\n                        }\r\n                        >\r\n                    <span className=\"cat-select big-cats\"><b>Explore All Categories</b></span>\r\n                    </OverlayTrigger>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CategoryBar;","import  { useContext,useEffect} from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { productContext,catContext } from \"../App\";\r\nconst CategoryPage = () => {\r\n    const [,setProducts] = useContext(productContext);\r\n    const [,setChangeCategory] = useContext(catContext);\r\n\r\n    const {category} = useParams();\r\n    useEffect(()=>{\r\n        if(category && category.length>0){\r\n            fetch(\"https://shopping-website-backend.adaptable.app/productscategorywise\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    \r\n                    category:category.toLowerCase()\r\n                    \r\n                })\r\n            })\r\n        .then(data=>data.json())\r\n        .then(data=>{\r\n            setProducts(data) \r\n            setChangeCategory(data[0]?.category)\r\n        })\r\n    \r\n        }\r\n        else{\r\n            \r\n\r\n            fetch(\"https://shopping-website-backend.adaptable.app/products\")\r\n            .then(response=>response.json())\r\n            .then(data=>setProducts(data))\r\n            .then(setChangeCategory(true))\r\n            .catch(err => console.log('Request Failed'));\r\n        }\r\n        return () => {\r\n            setChangeCategory(false)\r\n            setProducts(null)\r\n        }\r\n        \r\n    },[category,setProducts,setChangeCategory])\r\n    \r\n    \r\n    \r\n\r\n    \r\n    return(\r\n        <>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CategoryPage;","import React from \"react\";\r\n\r\nconst OrderItem=({id,product_name,qty,img,price,date})=>{\r\n\r\n    return(\r\n        <>\r\n        <h3>Order ID: {id}</h3>\r\n        <h3>Purchased on : {date.slice(0,10)}</h3>\r\n        <div style={{display:\"flex\",flexWrap:\"wrap\"}}>\r\n                <img src={img} alt=\"item\" style={{margin:\"10px\",width:\"100px\",height:\"100px\",objectFit:'scale-down'}}/>\r\n                <div style={{display:\"flex\",flexDirection:\"column\",wordBreak:\"break-word\"}}>\r\n                    <h3 >{product_name}</h3>\r\n                    <h3>Qty:{qty}</h3>\r\n                    <h3>Rs.{price}</h3>\r\n                </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrderItem;","import React, { useEffect, useState } from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OrderItem from \"./Order\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nconst MyOrders=()=>{\r\n\r\n    const [orders,setOrders] = useState(null);\r\n    useEffect(()=>{\r\n        let componentMounted = true;\r\n\r\n        const user = localStorage.getItem(\"user\");\r\n        const userId = JSON.parse(user).id;\r\n        fetch(\"https://shopping-website-backend.adaptable.app/gettingOrder\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    custId:userId\r\n                })\r\n            })\r\n        .then(Data=>Data.json())\r\n        .then(data=>{\r\n            if(componentMounted){\r\n            setOrders(data)\r\n            }\r\n        })\r\n        .catch(err => console.log('Request Failed'));\r\n\r\n\r\n        return () => {\r\n            componentMounted = false;\r\n           }\r\n        },[])\r\n\r\n        \r\n        if(orders){\r\n    if(orders.length===0){\r\n        \r\n        return (\r\n            <div style={{marginTop:\"20px\"}}>\r\n            <h3 style={{textAlign:'center'}}>You Have No Orders!</h3>\r\n            <Link to=\"/\"><h2 style={{textAlign:\"center\"}}>Continue Shopping</h2></Link>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        \r\n    return (\r\n        <div style={{marginTop:\"20px\"}}>\r\n        <h3 style={{textAlign:'center'}} >Your Orders:</h3>\r\n       <ListGroup>\r\n           {orders.map((order,i)=>{\r\n                return <ListGroupItem style={{borderRadius:\"15px\",boxShadow:'1px 2px 0 0 #CBC6C6'}}key = {orders[i].order_id}>\r\n                            <OrderItem\r\n                                key = {orders[i].order_id}\r\n                                id = {orders[i].order_id}\r\n                                product_name={orders[i].product_name}\r\n                                img = {orders[i].img}\r\n                                price = {orders[i].price}\r\n                                qty = {orders[i].qty}\r\n                                date = {orders[i].date}\r\n                            />\r\n                    </ListGroupItem>\r\n       })\r\n    }\r\n\r\n    </ListGroup>\r\n    </div>\r\n    \r\n    \r\n     );\r\n    }\r\n}\r\nelse{\r\n    return (\r\n        <div style={{marginTop:'20px',textAlign:'center'}}> \r\n            <Spinner animation=\"border\" role=\"status\" >\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default MyOrders;","import TypeWriterEffect from 'react-typewriter-effect';\r\n\r\nconst Four0Four = () => {\r\n    return(\r\n        <div style={{display:'flex',justifyContent:'center',alignItems:'center',marginTop:'40px'}}>\r\n        <TypeWriterEffect\r\n            startDelay={50}\r\n            text={\"Error 404! Page Not Found :(\"}\r\n            typeSpeed={80}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Four0Four;\r\n","import './App.css';\r\nimport { useState, useEffect,createContext } from 'react';\r\nimport {Form, Container,Navbar} from 'react-bootstrap';\r\nimport Navigation from './Components/NavigationBar/Navigation'\r\nimport {HashRouter,Route,Switch} from 'react-router-dom';\r\nimport ProductCardList from './Components/ProductCard/ProductCardList';\r\nimport Cart from './Components/Cart/Cart';\r\nimport Profile from './Components/Profile/Profile';\r\nimport OrderDone from './Components/orderdone';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { loadUserAccount } from './slices/loadUserSlice';\r\nimport { changeRoute } from './slices/routeSlice';\r\nimport { changeDisplay } from './slices/displaySlice';\r\nimport { SetTotal } from './slices/cartItemsTotalSlice';\r\nimport ProductDetails from './Components/ProductCard/ProductDetails';\r\nimport CategoryBar from './Components/CategoryBar/CategoryBar';\r\nimport CategoryPage from './Components/CategoryPage';\r\nimport MyOrders from './Components/Profile/MyOrders';\r\nimport Addresses from './Components/Profile/Addresses/Addresses';\r\nimport Four0Four from './Components/four_o_four/Four0Four';\r\nconst productContext = createContext();\r\nconst catContext = createContext();\r\n\r\n\r\nconst App=()=> {\r\n\r\n  const [products,setProducts] = useState(null);\r\n  const cartItems = useSelector((state)=>state.changeCartTotal.total);\r\n  const user = useSelector((state) => state.loadUser.user);\r\n  const [search,setSearch] = useState(\"\");\r\n  const [changeCategory,setChangeCategory] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user\") != null){\r\n      dispatch(loadUserAccount(JSON.parse(localStorage.getItem(\"user\"))))\r\n    }\r\n  }, [dispatch])\r\n\r\n\r\nuseEffect(() => {\r\n  if(user.id){\r\n\r\n    dispatch(changeRoute(\"loggedin\"));\r\n    dispatch(changeDisplay(' '));\r\n    localStorage.setItem(\"user\",JSON.stringify({id:user.id,email:user.email,name:user.name}));\r\n    \r\n    fetch(\"https://shopping-website-backend.adaptable.app/getCartTotalItems\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    \r\n                  custId:user.id\r\n                    \r\n                })\r\n            })\r\n        .then(data=>data.json())\r\n        .then(total=>dispatch(SetTotal(total.cart_items)))\r\n        .catch(err => console.log('Request Failed'));\r\n\r\n        \r\n  }\r\n  \r\n}, [user,dispatch])\r\n\r\n\r\n\r\n \r\n  \r\n    const filteredProducts = products?.filter(product=>{\r\n      return product.product_name.toLowerCase().includes(search?.toLowerCase());\r\n    })\r\n    \r\n \r\n  \r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path={['/category/:category','/']}>\r\n                  \r\n                  <Navigation cartItems={cartItems} home={true}/>\r\n                  \r\n                    {user.id ?\r\n                    <>\r\n                    <CategoryBar/>\r\n                    <Navbar sticky=\"top\" style={{zIndex:'10'}}>\r\n                    <Container> \r\n                      <Form className=\"d-flex\" style={{width:'100%'}}>\r\n                        <Form.Control\r\n                          type=\"search\"\r\n                          placeholder=\"Search\"\r\n                          className=\"me-2\"\r\n                          aria-label=\"Search\"\r\n                          style={{backgroundColor:'#131921',color:\"white\"}}\r\n                          onChange={(e)=>setSearch(e.target.value)}\r\n                          value={search}\r\n                          \r\n                          />\r\n                      </Form>\r\n                    </Container>\r\n                    </Navbar>\r\n                    \r\n                    <productContext.Provider value={[products,setProducts]}>\r\n                      <catContext.Provider value={[changeCategory,setChangeCategory]}>\r\n                        <CategoryPage/>\r\n                      </catContext.Provider>\r\n                    </productContext.Provider>\r\n                    \r\n                    </>\r\n\r\n                    :\r\n                    ''\r\n                  }\r\n                    {user.id?<div style={{display:'flex',justifyContent:'center',alignItems:'center','textTransform':'Capitalize'}}><h1>{changeCategory}</h1></div>:\"\"}\r\n                   <ProductCardList products={filteredProducts} userId = {user.id}/>\r\n        </Route>\r\n\r\n          <Route path='/cart'>\r\n                <Cart customerId={user.id}/>\r\n          </Route>\r\n\r\n          <Route path='/profile'>\r\n            <Navigation cartItems={cartItems}/>\r\n            <Profile Name={user.name}/>\r\n          </Route>\r\n\r\n          <Route path='/orderdone'>\r\n            <OrderDone userId={user.id}/>\r\n          </Route>\r\n\r\n          <Route path='/myorders'>\r\n            <Navigation cartItems={cartItems}/>\r\n            <MyOrders/> \r\n          </Route>\r\n\r\n          <Route path='/myaddresses'>\r\n            \r\n            <Navigation cartItems={cartItems} />\r\n            <div style={{padding:'20px'}}>\r\n            <Addresses userId={user.id}/>\r\n            </div> \r\n          </Route>\r\n\r\n          \r\n\r\n\r\n\r\n          \r\n          {user.id?\r\n          <Route path='/products/:id' exact>\r\n            <Navigation cartItems={cartItems}/>\r\n            <ProductDetails userId={user.id}/>\r\n          </Route>\r\n          :\r\n          <>\r\n          <Navigation cartItems={cartItems} />\r\n          <ProductCardList/>\r\n          </>\r\n\r\n          }\r\n\r\n          <Route path=\"*\">\r\n              <Navigation cartItems={cartItems}/>\r\n               <Four0Four/>\r\n          </Route>\r\n\r\n\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\nexport {productContext};\r\nexport {catContext};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport loadUserSlice from './slices/loadUserSlice'\r\nimport routeChangeSlice  from './slices/routeSlice'\r\nimport displaySlice from './slices/displaySlice'\r\nimport cartItemsTotalSlice from './slices/cartItemsTotalSlice'\r\nimport radioSelectSlice from './slices/radioSelectSlice'\r\nimport canPaySlice  from './slices/canPaySlice'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    loadUser:loadUserSlice,\r\n    routeChange:routeChangeSlice,\r\n    changeDisplay:displaySlice,\r\n    changeCartTotal:cartItemsTotalSlice,\r\n    changeSelect:radioSelectSlice,\r\n    changeCanPay:canPaySlice,\r\n\r\n  },\r\n}) ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}