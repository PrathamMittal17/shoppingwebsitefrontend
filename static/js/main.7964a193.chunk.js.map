{"version":3,"sources":["slices/routeSlice.js","slices/loadUserSlice.js","Components/NavigationBar/Navigation.js","Components/ProductCard/ProductCard.js","slices/displaySlice.js","Components/Register/Register.js","Components/SignIn.js","Components/ProductCard/ProductCardList.js","slices/cartItemsTotalSlice.js","Components/Cart/CartItem.js","Components/Cart/Cart.js","Components/Profile/Order.js","Components/Profile/MyOrders.js","Components/Profile/Profile.js","Components/orderdone.js","Components/ProductCard/ProductDetails.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["routeChangeSlice","createSlice","name","initialState","route","reducers","changeRoute","state","action","payload","actions","loadUserSlice","user","loadUserAccount","Object","assign","CustomToggle","React","forwardRef","ref","children","onClick","href","e","preventDefault","style","color","icon","faUser","fontSize","className","Navigation","cartItems","dispatch","useDispatch","useSelector","routeChange","Navbar","backgroundColor","variant","sticky","expand","Container","Brand","as","Link","to","Toggle","Collapse","id","Nav","gap","display","justifyContent","alignItems","faShoppingCart","fontWeight","marginLeft","Dropdown","Menu","textAlign","margin","Item","padding","localStorage","removeItem","ProductCard","image","productName","price","history","useHistory","handleOnClick","useCallback","push","Card","width","borderRadius","cursor","Img","height","objectFit","src","Body","Title","Subtitle","displaySlice","changeDisplay","Register","useState","email","setEmail","fname","setFname","lname","setLname","password","setPassword","emptyFname","setEmptyFname","emptyLname","setEmptyLname","emptyEmail","setEmptyEmail","emptyPassword","setemptyPassword","EmailBottomText","setEmailBottomText","PasswordBottomText","setPasswordBottomText","alreadyExists","setAlreadyExists","Form","Label","Group","controlId","Control","type","placeholder","onChange","event","target","value","Button","validator","isEmpty","isEmail","isStrongPassword","minLength","minLowercase","minNumbers","minSymbols","minUppercase","fetch","method","headers","body","JSON","stringify","then","data","json","catch","err","console","log","SignIn","setEmptyPassword","passwordBottomText","setPasswordText","rightDetails","setRightDetails","ProductCardList","products","userId","LoginForm","map","product","i","product_id","img","product_name","Spinner","animation","role","Alert","cartItemsTotalSlice","total","IncreaseTotal","DecreaseTotal","SetTotal","CartItem","index","quantity","custId","useContext","totalPriceContext","setTotalPrice","cartItemsContext","cartItemsData","setCartItemsData","qty","changeQty","useEffect","cartItemId","flexWrap","alt","flexDirection","wordBreak","size","totalPrice","Number","faPlus","faMinus","splice","item_id","customerId","operation","faTrashAlt","createContext","Cart","componentMounted","length","amount","session","a","loadStripe","redirectToCheckout","sessionId","ListGroup","Provider","cart_item_id","OrderItem","date","slice","MyOrders","orders","setOrders","getItem","parse","Data","order","ListGroupItem","Order","order_id","Profile","Name","Email","OrderDone","orderItems","keys","ProductDetails","useParams","productDetails","setDetails","load","setLoad","recommendedProduct","setrecommendedProduct","inCart","changeInCart","cartInfoStatus","setCartInfoStatus","window","scrollTo","productId","cart_status","values","forEach","current","Image","fluid","disabled","status","Tabs","defaultActiveKey","Tab","eventKey","title","about","App","setProducts","changeCartTotal","loadUser","search","setSearch","response","setItem","cart_items","filteredProducts","filter","toLowerCase","includes","exact","path","position","zIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7964a193.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  route : 'loggedout',\r\n}\r\n\r\nexport const routeChangeSlice = createSlice({\r\n  name: 'routeChange',\r\n  initialState,\r\n  reducers: {\r\n   changeRoute: (state,action) => {\r\n      state.route = action.payload;\r\n      },\r\n    },\r\n}\r\n\r\n)\r\n\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { changeRoute} = routeChangeSlice.actions\r\n\r\nexport default routeChangeSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  user: {},\r\n}\r\n\r\nexport const loadUserSlice = createSlice({\r\n  name: 'loadUser',\r\n  initialState,\r\n  reducers: {\r\n   loadUserAccount: (state, action) => {\r\n      return Object.assign({},state,{\r\n          user:action.payload\r\n          })\r\n      },\r\n    },\r\n}\r\n\r\n)\r\n\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { loadUserAccount} = loadUserSlice.actions\r\n\r\nexport default loadUserSlice.reducer","import React from 'react'\r\nimport { Navbar,Nav,Container,Dropdown } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { useSelector ,useDispatch} from 'react-redux';\r\nimport { changeRoute } from '../../slices/routeSlice';\r\nimport { loadUserAccount } from '../../slices/loadUserSlice';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser,faShoppingCart } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Navigation.css'\r\n\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <a\r\n      href=\"/dropdown\"\r\n      ref={ref}\r\n      onClick={e => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n      style={{color:'white'}}\r\n    >\r\n      <FontAwesomeIcon icon={faUser}  style={{fontSize:'1.75rem'}} className=\"hover-border\"/>\r\n      {children}\r\n    </a>\r\n  ));\r\n\r\nconst Navigation= ({cartItems}) => {\r\n    const dispatch = useDispatch();\r\n    const route = useSelector((state)=> state.routeChange.route);\r\n\r\n    return(\r\n        <Navbar  style={{backgroundColor:\"#131921\"}} variant=\"dark\" sticky=\"top\" expand=\"sm\">\r\n        <Container>\r\n        <Navbar.Brand as={Link} to=\"/\"><span className=\"brand-name h4\">Thrifty<span className=\"box-text\">Box</span></span></Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" >\r\n            {route===\"loggedin\"\r\n            \r\n            ?\r\n            \r\n            <Nav className=\"ms-auto\" style={{gap:\"30px\",display:'flex',justifyContent:'center',alignItems:'center',}}>\r\n                <div style={{display:\"flex\"}} className=\"cart\">\r\n                    <Nav.Link as={Link} to=\"/cart\" style={{color:'white'}} className=\"hover-border\">\r\n                        <FontAwesomeIcon icon={faShoppingCart} style={{fontSize:'1.75rem'}} />\r\n                    </Nav.Link>\r\n                    <span style={{fontWeight:\"bold\",color:\"#F08804\",marginLeft:\"2.5px\"}}>{cartItems}</span>\r\n                </div>\r\n                    <Dropdown >\r\n                        <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\"/>\r\n                        \r\n                        <Dropdown.Menu style={{textAlign:'center',margin:\"15px -100px\"}}>\r\n\r\n                            <Dropdown.Item as={Link} to=\"/profile\" style={{color:'black',fontSize:'18px',padding:'10px'}} >\r\n                                    My Profile\r\n                            </Dropdown.Item>\r\n\r\n                            <Dropdown.Item as={Link}  style={{color:'black',fontSize:'18px',padding:'10px'}} to=\"\"onClick={()=>{\r\n                                    dispatch(loadUserAccount(' '));\r\n                                    dispatch(changeRoute(\"loggedout\"));\r\n                                    localStorage.removeItem(\"user\");\r\n                                    localStorage.removeItem(\"id\");\r\n                                    }} >\r\n                                    Sign Out\r\n                \r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n\r\n                    </Dropdown>\r\n                </Nav>\r\n            :\r\n           ''\r\n            }\r\n            \r\n        </Navbar.Collapse>\r\n        </Container>\r\n        </Navbar>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Navigation;","import React, {useCallback} from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst ProductCard = ({id=0,image,productName,price}) => {\r\n    const history = useHistory();\r\n\r\n    const handleOnClick = useCallback(() => {\r\n        history.push(`/products/${id}`)\r\n    }, [history,id]);\r\n\r\n\r\n    return(\r\n        <Card onClick={()=>handleOnClick()} style={{ width: '18rem', margin:'20px',borderRadius:\"15px\",cursor: \"pointer\"}} >\r\n            <Card.Img style={{width:'100%',height:'30vh',objectFit:'scale-down',padding:'10px'}} variant=\"top\" src={image} />\r\n            <Card.Body >\r\n                <Card.Title>{productName}</Card.Title>\r\n                <Card.Subtitle>\r\n                Rs.{price}\r\n                </Card.Subtitle>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\nexport default ProductCard;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  display : ' ',\r\n}\r\n\r\nexport const displaySlice = createSlice({\r\n  name: 'changeDisplay',\r\n  initialState,\r\n  reducers: {\r\n   changeDisplay: (state,action) => {\r\n      state.display = action.payload;\r\n      },\r\n    },\r\n}\r\n\r\n)\r\n\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { changeDisplay} = displaySlice.actions\r\n\r\nexport default displaySlice.reducer","import React,{useState} from \"react\";\r\nimport { Form,Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport './Register.css'\r\nimport { loadUserAccount } from \"../../slices/loadUserSlice\";\r\nimport { changeRoute } from \"../../slices/routeSlice\";\r\nimport { changeDisplay } from \"../../slices/displaySlice\";\r\nimport validator from 'validator';\r\n\r\n\r\nconst Register=()=>{\r\n    /* eslint-disable no-unused-vars */\r\n\r\n    const[email,setEmail] = useState('');\r\n    const[fname,setFname] = useState('');\r\n    const[lname,setLname] = useState('');\r\n    const[password,setPassword] = useState('');\r\n\r\n    const[emptyFname,setEmptyFname] = useState(null);\r\n    const[emptyLname,setEmptyLname] = useState(null);\r\n    const[emptyEmail,setEmptyEmail] = useState(null);\r\n    const[emptyPassword,setemptyPassword] = useState(null);\r\n\r\n    const[EmailBottomText,setEmailBottomText] = useState(\"Email can't be empty\");\r\n    const[PasswordBottomText,setPasswordBottomText] = useState(\"Password can't be empty\");\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    const[alreadyExists,setAlreadyExists] = useState(null);\r\n\r\n\r\n    const submitRegister = ()=>{\r\n        if(validator.isEmpty(fname)){\r\n            setEmptyFname(true)\r\n        }\r\n\r\n        if(validator.isEmpty(lname)){\r\n            setEmptyLname(true)\r\n        }\r\n\r\n        if(validator.isEmpty(email)){\r\n            setEmptyEmail(true)\r\n            setEmailBottomText(\"Email can't be empty\")\r\n        }\r\n        else if(!validator.isEmail(email)){\r\n            setEmptyEmail(true)\r\n            setEmailBottomText(\"Invalid Email\")\r\n        }\r\n\r\n        if(validator.isEmpty(password)){\r\n            setemptyPassword(true)\r\n            setPasswordBottomText(\"Password can't be empty\")\r\n        }\r\n        else if(!validator.isStrongPassword(password,{\r\n            minLength:6,minLowercase:1,minNumbers:1,minSymbols:1,minUppercase:1\r\n        })){\r\n            setemptyPassword(true)\r\n            setPasswordBottomText(\"Invalid Password\")\r\n        }\r\n\r\n        else if(!emptyFname && (!emptyEmail && validator.isEmail(email)) && !emptyLname && (!emptyPassword &&\r\n            validator.isStrongPassword(password,{\r\n                minLength:6,minLowercase:1,minNumbers:1,minSymbols:1,minUppercase:1\r\n            })\r\n            )){\r\n                fetch(\"https://shopping-website-backend.adaptable.app/register\",{\r\n                    method:\"post\",\r\n                    headers:{'Content-Type':'application/json'},\r\n                    body:JSON.stringify({\r\n                        fname:fname,\r\n                        lname:lname,\r\n                        email:email,\r\n                        password:password\r\n                    })\r\n                })\r\n                .then(data=>data.json())\r\n                .then(user=>{\r\n                    if(user.id){\r\n                        dispatch(changeRoute(\"loggedin\"));\r\n                        dispatch(changeDisplay(' '));\r\n                        dispatch(loadUserAccount(user));\r\n        \r\n                    }\r\n                    else if(user==='Unable to register'){\r\n                        setAlreadyExists(true)\r\n                    }\r\n                    \r\n                    \r\n                })\r\n                .catch(err => console.log(err));\r\n                \r\n        }\r\n        \r\n        \r\n\r\n    }\r\n\r\n    const changeEmail = (event) =>{\r\n        setEmptyEmail(false)\r\n        setEmail(event.target.value);\r\n        setAlreadyExists(false)\r\n    }\r\n\r\n    const changeFname = (event) =>{\r\n        setEmptyFname(false)\r\n        setFname(event.target.value);\r\n        setAlreadyExists(false)\r\n    }\r\n    \r\n    const changeLname = (event) =>{\r\n        setEmptyLname(false)\r\n        setLname(event.target.value);\r\n        setAlreadyExists(false)\r\n    }\r\n\r\n    const changePassword = (event) =>{\r\n        setemptyPassword(false)\r\n        setPassword(event.target.value);\r\n        setAlreadyExists(false)\r\n    }\r\n\r\n   \r\n    return(\r\n        <Form >\r\n            {alreadyExists?<Form.Label><b>User already exists please Sign In</b></Form.Label>:\"\"}\r\n            <Form.Label><h4>Register</h4></Form.Label>\r\n            <Form.Group className=\"mb-3\" controlId=\"fname\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter First Name:\" onChange={changeFname} />\r\n            </Form.Group>\r\n            {emptyFname?<Form.Label><b>First Name can't be empty</b></Form.Label>:\"\"}\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"lname\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter Last Name:\" onChange={changeLname}/>\r\n            </Form.Group>\r\n            {emptyLname?<Form.Label><b>Last Name can't be empty</b></Form.Label>:\"\"}\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                <Form.Label>Email Address:</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter Email Address:\" onChange={changeEmail} />\r\n            </Form.Group>\r\n            {emptyEmail?<Form.Label><b>{EmailBottomText}</b></Form.Label>:\"\"}\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                <Form.Label>Password:</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Enter Password:\" onChange={changePassword}/>\r\n            </Form.Group>\r\n            {emptyPassword?<Form.Label><b>{PasswordBottomText}</b></Form.Label>:\"\"}\r\n            <Form.Label>• Minimum 6 letters</Form.Label>\r\n            <Form.Label>• Minium 1 Capital Letter </Form.Label>\r\n            <Form.Label>• Minium 1 Symbol</Form.Label>\r\n            <Form.Label>• Minium 1 Number</Form.Label>\r\n\r\n            <Button variant=\"primary\" onClick={submitRegister}>\r\n                Register\r\n            </Button>\r\n            <br/>\r\n            \r\n        </Form>\r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default Register;","import React,{useState} from \"react\";\r\nimport { Form,Button } from \"react-bootstrap\";\r\nimport './Register/Register.css';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loadUserAccount } from \"../slices/loadUserSlice\";\r\nimport { changeRoute } from \"../slices/routeSlice\";\r\nimport { changeDisplay } from \"../slices/displaySlice\";\r\nimport validator from 'validator';\r\n\r\nconst SignIn=()=>{\r\n\r\n    const[email,setEmail] = useState('');\r\n    const[password,setPassword] = useState('');\r\n    const[emptyEmail,setEmptyEmail] = useState(true);\r\n    const[emptyPassword,setEmptyPassword] = useState(true);\r\n    const[EmailBottomText,setEmailBottomText] = useState(\"\");\r\n    const[passwordBottomText,setPasswordText] = useState(\"\");\r\n    const[rightDetails,setRightDetails] = useState(true);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const changeEmail = (event) =>{\r\n        setEmptyEmail(false)\r\n        setEmail(event.target.value);\r\n        setRightDetails(true)\r\n    }\r\n\r\n    const changePassword = (event) =>{\r\n        setEmptyPassword(false)\r\n        setPassword(event.target.value);\r\n        setRightDetails(true)\r\n    }\r\n\r\n    const login = ()=>{\r\n        if(validator.isEmpty(email)){\r\n            setEmptyEmail(true)\r\n            setEmailBottomText(\"Email can't be empty\")\r\n        }\r\n        else if(!validator.isEmail(email)){\r\n            setEmptyEmail(true)\r\n            setEmailBottomText(\"Invalid Email\")\r\n        }\r\n        if(validator.isEmpty(password)){\r\n            setEmptyPassword(true)\r\n            setPasswordText(\"Password can't be empty\")\r\n        }\r\n\r\n        if((!emptyEmail && validator.isEmail(email)) && !validator.isEmpty(password)){\r\n            fetch(\"https://shopping-website-backend.adaptable.app/login\",{\r\n            method:\"post\",\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                email:email,\r\n                password:password\r\n            })\r\n        })\r\n        .then(data=>data.json())\r\n        .then(user=>{\r\n            if(user.id){\r\n                dispatch(changeRoute(\"loggedout\"));\r\n                dispatch(changeDisplay(' '));\r\n                dispatch(loadUserAccount(user));\r\n            }\r\n            else if(user==='wrong credentials'){\r\n                setRightDetails(false)\r\n            }\r\n        })\r\n        .catch(err => console.log('Request Failed'));\r\n    }\r\n\r\n\r\n        \r\n    }\r\n    return(\r\n        <Form >\r\n            \r\n            <Form.Label><h4>Sign In</h4></Form.Label>\r\n            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                <Form.Label>Email Address:</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter Email Address:\" onChange={changeEmail}/>\r\n            </Form.Group>\r\n            {emptyEmail?<Form.Label><b>{EmailBottomText}</b></Form.Label>:\"\"}\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                <Form.Label>Password:</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Enter Password:\" onChange={changePassword}/>\r\n            </Form.Group>\r\n            {emptyPassword?<Form.Label><b>{passwordBottomText}</b></Form.Label>:\"\"}\r\n\r\n            <Button variant=\"primary\" onClick={login}>Sign In</Button>\r\n            <br/>\r\n            {rightDetails?\"\":<Form.Label><b>Invalid Login Details</b></Form.Label>}\r\n\r\n        </Form>\r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default SignIn;","import React from 'react'\r\nimport { Spinner,Alert } from 'react-bootstrap';\r\nimport ProductCard from './ProductCard';\r\nimport { changeDisplay } from '../../slices/displaySlice';\r\nimport { useDispatch,useSelector} from 'react-redux';\r\nimport './ProductCardList.css'\r\nimport Register from '../Register/Register';\r\nimport SignIn from '../SignIn';\r\nconst ProductCardList = ({products,userId=0}) => {\r\n    const display = useSelector((state)=>state.changeDisplay.display)\r\n\r\n    const dispatch = useDispatch();\r\n    let LoginForm =<SignIn/>;\r\n  \r\n    if(display===\"register\"){\r\n        console.log(display)\r\n        LoginForm=<Register/>\r\n    }\r\n    else if(display===\"signin\"){\r\n        LoginForm=<SignIn/>\r\n    }\r\n   \r\n\r\n    if(userId){\r\n    \r\n    \r\n    if(products){\r\n    return(\r\n        <div className=\"ProductCardList\">\r\n            {\r\n                products.map((product,i)=>{\r\n                    \r\n                    return <ProductCard\r\n                        key={products[i].product_id}\r\n                        id={products[i].product_id}\r\n                        image={products[i].img}\r\n                        productName={products[i].product_name}\r\n                        price={products[i].price}\r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n        }\r\n    else{\r\n        return(\r\n            <div style={{textAlign:'center',padding:'100px'}}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n            </div>\r\n        );\r\n    }\r\n    }\r\n    else{\r\n        return (\r\n        <div>\r\n            <Alert variant=\"primary\" style={{textAlign:'center'}}>Please&ensp; \r\n            <Alert.Link onClick={()=>dispatch(changeDisplay('signin'))}>Sign In</Alert.Link>\r\n            <b>/</b>\r\n            <Alert.Link onClick={()=>dispatch(changeDisplay('register'))}>Register</Alert.Link>&ensp;First</Alert>\r\n            {LoginForm}\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductCardList;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  total : null,\r\n}\r\n\r\nexport const cartItemsTotalSlice = createSlice({\r\n  name: 'changeCartTotal',\r\n  initialState,\r\n  reducers: {\r\n   IncreaseTotal: (state) => {\r\n      state.total += 1;\r\n      },\r\n   DecreaseTotal: (state) => {\r\n        state.total -= 1;\r\n        },\r\n   SetTotal: (state,action) => {\r\n          state.total = action.payload;\r\n          },\r\n    },\r\n}\r\n\r\n)\r\n\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { IncreaseTotal,DecreaseTotal,SetTotal} = cartItemsTotalSlice.actions\r\n\r\nexport default cartItemsTotalSlice.reducer","import React, { useContext,useState,useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus,faMinus, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Button} from 'react-bootstrap';\r\nimport { cartItemsContext,totalPriceContext } from \"./Cart\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DecreaseTotal } from \"../../slices/cartItemsTotalSlice\";\r\nconst CartItem = ({index,id,productName,price,img,quantity,custId}) =>{\r\n    \r\n    \r\n    const [,setTotalPrice] = useContext(totalPriceContext);\r\n    const[cartItemsData,setCartItemsData] = useContext(cartItemsContext);\r\n    const dispatch = useDispatch();\r\n    const [qty,changeQty] = useState(quantity);\r\n    \r\n   \r\n    \r\n    \r\n    useEffect(()=>{\r\n        fetch(\"https://shopping-website-backend.adaptable.app/updatecartitemqty\",{\r\n                                method:\"put\",\r\n                                headers: {'Content-Type': 'application/json'},\r\n                                body:JSON.stringify({\r\n                                    cartItemId:id,\r\n                                    qty:qty\r\n\r\n                                })\r\n                            })\r\n                            .catch(err => console.log('Request Failed'));\r\n\r\n       },[qty,id])\r\n\r\n\r\n   \r\n\r\n   \r\n    const deleteCartItem = () =>{\r\n\r\n        cartItemsData.splice(index,1)\r\n        setCartItemsData(cartItemsData)\r\n        setTotalPrice(totalPrice=>totalPrice-(Number(price)*qty))\r\n        fetch(\"https://shopping-website-backend.adaptable.app/removecartitem\",{\r\n                method:\"delete\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    item_id:id\r\n                })\r\n            })\r\n\r\n       \r\n\r\n       \r\n            \r\n\r\n        fetch(\"https://shopping-website-backend.adaptable.app/carttotalitems\",{\r\n                method:\"put\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    \r\n                    customerId:custId,\r\n                    operation:\"D\"\r\n                    \r\n                })\r\n            })\r\n            .then(data=>data.json())\r\n            .then(dispatch(DecreaseTotal()))\r\n \r\n      \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div style={{display:\"flex\",flexWrap:\"wrap\"}}>\r\n                <img src={img} alt=\"item\" style={{margin:\"5px\",width:\"100px\",height:\"100px\",objectFit:'scale-down'}}/>\r\n                <div style={{display:\"flex\",flexDirection:\"column\",wordBreak:\"break-all\"}}>\r\n                    <h3 style={{margin:\"5px\"}}>{productName}</h3>\r\n                    <h3 style={{margin:\"5px\"}}>Rs.{price*qty}</h3>\r\n                </div>\r\n            </div>\r\n            <div style={{display:\"flex\",justifyContent:\"flex-end\",alignItems:\"center\"}}>\r\n                <Button size=\"sm\" variant=\"outline-primary\" style={{margin:\"20px\"}} onClick={()=>{\r\n                    if(qty<4){\r\n                        changeQty(qty+1)\r\n                        setTotalPrice(totalPrice=>totalPrice+Number(price))\r\n\r\n                        \r\n                    }\r\n\r\n                }}>\r\n                    <FontAwesomeIcon size=\"lg\" style={{fontSize:\"1rem\"}}icon={faPlus} />\r\n                </Button>\r\n                <h4>{qty}</h4>\r\n                <Button size=\"sm\" variant=\"outline-primary\" style={{margin:\"20px\"}} onClick={()=>{\r\n                    if(qty>1){\r\n                        changeQty(qty-1);\r\n                        setTotalPrice(totalPrice=>totalPrice-Number(price))\r\n                    }\r\n\r\n                       \r\n                }}>\r\n                        <FontAwesomeIcon size=\"lg\" style={{fontSize:\"1rem\"}}icon={faMinus} />\r\n                </Button>\r\n\r\n                <Button size=\"md\" variant=\"outline-danger\" style={{margin:\"10px\"}} onClick={deleteCartItem}>\r\n                    <FontAwesomeIcon size=\"lg\" style={{fontSize:\"1rem\"}}icon={faTrashAlt} />\r\n                </Button>\r\n                \r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CartItem;","import React,{useState,useEffect, createContext} from \"react\";\r\nimport CartItem from \"./CartItem\";\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { ListGroup,Button,Spinner,Navbar } from \"react-bootstrap\";\r\nconst totalPriceContext = createContext();\r\nconst cartItemsContext = createContext();\r\nconst Cart = ({customerId=0}) =>{\r\n\r\n    const[cartItemsData,setCartItemsData] = useState(null);\r\n    const[totalPrice,setTotalPrice] = useState(0);\r\n    useEffect(() => {\r\n        let componentMounted = true;\r\n\r\n        fetch(\"https://shopping-website-backend.adaptable.app/cartitem\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    customerId:customerId\r\n                })\r\n            })\r\n            .then(data=>data.json())\r\n            .then(product=>{\r\n                if(componentMounted){\r\n                    setCartItemsData(product)\r\n                }\r\n            })\r\n            .catch(err => console.log('Request Failed'))\r\n            return () => {\r\n                componentMounted = false;\r\n               }\r\n\r\n        }, [customerId]);\r\n\r\n    \r\n\r\n    if(cartItemsData){\r\n            if(cartItemsData.length>0){\r\n                return(\r\n                <div>\r\n                    <Navbar  sticky=\"top\" expand=\"lg\" style={{display:'flex',justifyContent:'center',backgroundColor:\"#131921\",padding:\"10px\" }}>\r\n                        \r\n                        <h3 id=\"totalPrice\" style={{color:\"white\"}}>Total: Rs.{totalPrice}</h3>\r\n                        <Button type=\"submit\" style={{marginLeft:\"10px\"}} onClick={()=>{\r\n                            fetch(\"https://shopping-website-backend.adaptable.app/create-checkout-session\",{\r\n                                method:\"post\",\r\n                                headers: {'Content-Type': 'application/json'},\r\n                                body:JSON.stringify({\r\n                                    amount:totalPrice*100\r\n                                })\r\n                            })\r\n                            .then(data=>data.json())\r\n                            .then(async session=>{\r\n                                const stripe = await loadStripe('pk_test_51JmIXVSBM1qtXmvlx74yuerGEmGuKSxOQ7Ej0XDdZrpZQFasZ4XObY9hCWjeQEXA5GDH1QBgPShHtdlKKJBBYCE400KZp54zhq');\r\n                                stripe.redirectToCheckout({sessionId:session.id})\r\n                                \r\n                            }\r\n                            )\r\n                        }}>Checkout</Button>\r\n                \r\n                    </Navbar>\r\n                <ListGroup style={{padding:\"5px\"}}>\r\n                    \r\n\r\n                {cartItemsData.map((product,i)=>{\r\n                    if(totalPrice===0){\r\n                        setTotalPrice(totalPrice=>totalPrice+(cartItemsData[i].price*cartItemsData[i].qty))\r\n                    }\r\n\r\n                        return (\r\n                            \r\n                            <ListGroup.Item key={i} style={{borderRadius:\"15px\"}}>\r\n                                \r\n                                        <totalPriceContext.Provider value={[totalPrice,setTotalPrice]}>\r\n                                            <cartItemsContext.Provider value={[cartItemsData,setCartItemsData]}>\r\n                                                <CartItem\r\n                                                    index = {i}\r\n                                                    key={cartItemsData[i].cart_item_id}\r\n                                                    id={cartItemsData[i].cart_item_id}\r\n                                                    productName={cartItemsData[i].product_name}\r\n                                                    price={cartItemsData[i].price}\r\n                                                    img = {cartItemsData[i].img}\r\n                                                    quantity = {cartItemsData[i].qty}\r\n                                                    custId={customerId}\r\n                                                />\r\n                                            </cartItemsContext.Provider>\r\n                                        </totalPriceContext.Provider>\r\n                                \r\n                            \r\n                    </ListGroup.Item>\r\n                    \r\n                    );\r\n\r\n                \r\n                })\r\n        }\r\n\r\n        \r\n\r\n    </ListGroup>\r\n    </div>\r\n    \r\n    );\r\n\r\n    }\r\n    else if(cartItemsData.length===0){\r\n        return <h1 style={{textAlign:\"center\"}}>Cart is empty</h1>;\r\n    }\r\n}\r\nelse{\r\n    return (\r\n        <div style={{textAlign:'center',padding:'100px'}}>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n       \r\n        \r\n       \r\n    \r\n}\r\n\r\n\r\nexport default Cart;\r\nexport {totalPriceContext};\r\nexport {cartItemsContext};","import React from \"react\";\r\n\r\nconst OrderItem=({id,product_name,qty,img,price,date})=>{\r\n\r\n    return(\r\n        <>\r\n        <h3>Order ID: {id}</h3>\r\n        <h3>Purchased on : {date.slice(0,10)}</h3>\r\n        <div style={{display:\"flex\",flexWrap:\"wrap\"}}>\r\n                <img src={img} alt=\"item\" style={{margin:\"10px\",width:\"100px\",height:\"100px\",objectFit:'scale-down'}}/>\r\n                <div style={{display:\"flex\",flexDirection:\"column\",wordBreak:\"break-word\"}}>\r\n                    <h3 >{product_name}</h3>\r\n                    <h3>Qty:{qty}</h3>\r\n                    <h3>Rs.{price}</h3>\r\n                </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrderItem;","import React, { useEffect, useState } from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OrderItem from \"./Order\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nconst MyOrders=()=>{\r\n\r\n    const [orders,setOrders] = useState(null);\r\n    useEffect(()=>{\r\n        let componentMounted = true;\r\n\r\n        const user = localStorage.getItem(\"user\");\r\n        const userId = JSON.parse(user).id;\r\n        fetch(\"https://shopping-website-backend.adaptable.app/gettingOrder\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    custId:userId\r\n                })\r\n            })\r\n        .then(Data=>Data.json())\r\n        .then(data=>{\r\n            if(componentMounted){\r\n            setOrders(data)\r\n            }\r\n        })\r\n        .catch(err => console.log('Request Failed'));\r\n\r\n\r\n        return () => {\r\n            componentMounted = false;\r\n           }\r\n        },[])\r\n\r\n        \r\n        if(orders){\r\n    if(orders.length===0){\r\n        \r\n        return (\r\n            <>\r\n            <h3>You Have No Orders!</h3>\r\n            <Link to=\"/\"><h2 style={{textAlign:\"center\"}}>Continue Shopping</h2></Link>\r\n            </>\r\n        );\r\n    }\r\n    else{\r\n        \r\n    return (\r\n        <>\r\n        <h3>Your Orders:</h3>\r\n       <ListGroup>\r\n           {orders.map((order,i)=>{\r\n                return <ListGroupItem style={{borderRadius:\"15px\"}}key = {orders[i].order_id}>\r\n                            <OrderItem\r\n                                key = {orders[i].order_id}\r\n                                id = {orders[i].order_id}\r\n                                product_name={orders[i].product_name}\r\n                                img = {orders[i].img}\r\n                                price = {orders[i].price}\r\n                                qty = {orders[i].qty}\r\n                                date = {orders[i].date}\r\n                            />\r\n                    </ListGroupItem>\r\n       })\r\n    }\r\n\r\n    </ListGroup>\r\n    </>\r\n    \r\n    \r\n     );\r\n    }\r\n}\r\nelse{\r\n    return (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n    );\r\n}\r\n}\r\n\r\nexport default MyOrders;","import React from \"react\";\r\nimport MyOrders from \"./MyOrders\";\r\n\r\n\r\nconst Profile = ({Name,Email}) =>{\r\n    \r\n    return(\r\n       \r\n        <div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",padding:\"20px\"}}>\r\n            \r\n            <h3>Name: {Name}</h3>\r\n            <h3 style={{wordBreak:\"break-word\"}}>Email: {Email}</h3>\r\n            <MyOrders/>            \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Profile;","import React,{useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst OrderDone=({userId=0})=>{\r\n    useEffect(() => {\r\n        \r\n        const orderItems = {};\r\n        fetch(\"https://shopping-website-backend.adaptable.app/cartitem\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    customerId:userId\r\n                })\r\n            })\r\n        .then(data=>data.json())\r\n        .then(cartItems=>{\r\n            Object.assign(orderItems,cartItems)\r\n        Object.keys(orderItems).map((i)=>{\r\n                    return fetch(\"https://shopping-website-backend.adaptable.app/creatingOrder\",{\r\n                        method:\"post\",\r\n                        headers: {'Content-Type': 'application/json'},\r\n                        body:JSON.stringify({\r\n                            custId:userId,\r\n                            productName:orderItems[i].product_name,\r\n                            qty:orderItems[i].qty,\r\n                            price:orderItems[i].price*orderItems[i].qty,\r\n                            img:orderItems[i].img,\r\n                            \r\n                        })\r\n                    })\r\n                })\r\n            \r\n        })\r\n        .catch(err => console.log('Request Failed'));\r\n\r\n        \r\n    \r\n    }, [userId])\r\n    return(\r\n        <>\r\n            <h1 style={{textAlign:\"center\"}}>Your Order Is successful</h1>\r\n            <Link to=\"/\"><h2 style={{textAlign:\"center\"}}>Continue Shopping</h2></Link>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrderDone;","import {Button, Image,Tab,Tabs,Spinner} from 'react-bootstrap';\r\nimport React, { useEffect,useState } from 'react'\r\nimport './ProductDetails.css'\r\nimport { useDispatch } from 'react-redux';\r\nimport ProductCard from './ProductCard';\r\nimport { IncreaseTotal } from '../../slices/cartItemsTotalSlice';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ProductDetails = ({userId}) =>{\r\n    const {id} = useParams();\r\n    const[productDetails,setDetails] = useState(null);\r\n    const[load,setLoad] = useState(false)\r\n    const [recommendedProduct,setrecommendedProduct] = useState([])\r\n    const [inCart,changeInCart] = useState(true);\r\n    const[cartInfoStatus,setCartInfoStatus] = useState(false)\r\n    const dispatch = useDispatch();\r\n    \r\n    \r\n    \r\n    useEffect(()=>{\r\n        \r\n        window.scrollTo(0, 0)\r\n        fetch(\"https://shopping-website-backend.adaptable.app/getitemcartstatus\",{\r\n            method:\"post\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            body:JSON.stringify({\r\n                customerId:userId,\r\n                productId:id\r\n                \r\n               })\r\n        })\r\n        .then(data=>data.json())\r\n        .then(data=>{\r\n            if(data.cart_status==='T'){\r\n                changeInCart(true)\r\n            }\r\n            else{\r\n                changeInCart(false)\r\n            }\r\n            setCartInfoStatus(true)\r\n        })\r\n\r\n        fetch(\"https://shopping-website-backend.adaptable.app/getProductDetailsFull\",{\r\n            method:\"post\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            body:JSON.stringify({\r\n                productId:id\r\n            })\r\n        })\r\n        .then(data=>data.json())\r\n        .then(data=>setDetails(data))\r\n\r\n\r\n        fetch(\"https://shopping-website-backend.adaptable.app/recommend\",{\r\n            method:\"post\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            body:JSON.stringify({\r\n                'productId':id\r\n            })\r\n        })\r\n        .then(data=>data.json())\r\n        .then(data=>Object.values(data).forEach((id) => {\r\n            fetch(\"https://shopping-website-backend.adaptable.app/getProductDetailsHalf\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    productId:id\r\n                })\r\n            })\r\n            .then(data=>data.json())\r\n            .then(data=>setrecommendedProduct(current => [...current, data]));\r\n        }))\r\n        return () => {\r\n            setrecommendedProduct([])\r\n            setDetails(\"\")\r\n            setLoad(false)\r\n            setCartInfoStatus(false)\r\n        }\r\n    },[id,userId])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(recommendedProduct.length===5 && productDetails && cartInfoStatus){\r\n            setLoad(true)\r\n        }\r\n    },[recommendedProduct.length,productDetails,cartInfoStatus])\r\n\r\n    \r\n    const addToCart=()=>{\r\n        changeInCart(true)\r\n        if(userId){\r\n            fetch(\"https://shopping-website-backend.adaptable.app/cart\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    productId:id,\r\n                    customerId:userId,\r\n                    status:'T'\r\n                })\r\n            })\r\n\r\n            fetch(\"https://shopping-website-backend.adaptable.app/carttotalitems\",{\r\n                method:\"put\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    \r\n                    customerId:userId,\r\n                    operation:\"I\"\r\n                    \r\n                })\r\n            })\r\n            .then(data=>data.json())\r\n            .then(dispatch(IncreaseTotal()))\r\n            \r\n        }\r\n    }\r\n    \r\n  \r\n    if(load){\r\n    return(\r\n        <div style={{padding:'20px'}}>\r\n            <div style={{display:'flex',alignItems:'center',flexDirection:'column'}}>\r\n                <p className='name'>{productDetails.product_name}</p>\r\n                <Image width=\"170px\" src={productDetails.img}  fluid alt=\"Product Image\"/>\r\n                <div className=\"buttons\">\r\n                    <p className=\"price\">Price: Rs.{productDetails.price}</p>\r\n                    {inCart ? \r\n                    <Button disabled={true} variant=\"dark\">Item in Cart</Button> :\r\n                    <Button disabled={false} variant=\"primary\" onClick={addToCart}>Add to Cart</Button>}\r\n                </div>\r\n                <Tabs defaultActiveKey=\"about\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\r\n                    <Tab eventKey=\"about\" title=\"About \">\r\n                        <p className='about'>{productDetails.about}</p>\r\n                    </Tab>\r\n                    <Tab eventKey=\"recommended\" title=\"More Like This\">\r\n                        <div className='RecommendedList'>\r\n                           {\r\n                           recommendedProduct.map((product,)=>{\r\n                                return <ProductCard \r\n                                id={product.product_id}\r\n                                image = {product.img}\r\n                                productName = {product.product_name}\r\n                                price={product.price}\r\n                                key={product.product_id}\r\n\r\n                                />\r\n                        \r\n                            })\r\n                            \r\n                            \r\n                                \r\n                           \r\n                        }\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n    else{\r\n        return(\r\n        <div style={{textAlign:'center',padding:'100px'}}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProductDetails;","import './App.css';\r\nimport { useState, useEffect } from 'react';\r\nimport {Form, Container} from 'react-bootstrap';\r\nimport Navigation from './Components/NavigationBar/Navigation'\r\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\r\nimport ProductCardList from './Components/ProductCard/ProductCardList';\r\nimport Cart from './Components/Cart/Cart';\r\nimport Profile from './Components/Profile/Profile';\r\nimport OrderDone from './Components/orderdone';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { loadUserAccount } from './slices/loadUserSlice';\r\nimport { changeRoute } from './slices/routeSlice';\r\nimport { changeDisplay } from './slices/displaySlice';\r\nimport { SetTotal } from './slices/cartItemsTotalSlice';\r\nimport ProductDetails from './Components/ProductCard/ProductDetails';\r\n\r\n\r\nconst App=()=> {\r\n\r\n  const [products,setProducts] = useState(null);\r\n  const cartItems = useSelector((state)=>state.changeCartTotal.total);\r\n  const user = useSelector((state) => state.loadUser.user);\r\n  const [search,setSearch] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user\") != null){\r\n      dispatch(loadUserAccount(JSON.parse(localStorage.getItem(\"user\"))))\r\n    }\r\n    \r\n    fetch(\"https://shopping-website-backend.adaptable.app/products\")\r\n    .then(response=>response.json())\r\n    .then(data=>setProducts(data))\r\n    .catch(err => console.log('Request Failed'));\r\n    \r\n    \r\n      \r\n}, [dispatch])\r\n\r\n\r\nuseEffect(() => {\r\n  if(user.id){\r\n\r\n    dispatch(changeRoute(\"loggedin\"));\r\n    dispatch(changeDisplay(' '));\r\n    localStorage.setItem(\"user\",JSON.stringify({id:user.id,email:user.email,name:user.name}));\r\n    \r\n    fetch(\"https://shopping-website-backend.adaptable.app/getCartTotalItems\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    \r\n                  custId:user.id\r\n                    \r\n                })\r\n            })\r\n        .then(data=>data.json())\r\n        .then(total=>dispatch(SetTotal(total.cart_items)))\r\n        .catch(err => console.log('Request Failed'));\r\n\r\n        \r\n  }\r\n  \r\n}, [user,dispatch])\r\n\r\n\r\n\r\n \r\n  \r\n    const filteredProducts = products?.filter(product=>{\r\n      return product.product_name.toLowerCase().includes(search?.toLowerCase());\r\n    })\r\n    \r\n    \r\n  \r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path='/'>\r\n                    <Navigation cartItems={cartItems}/>\r\n                    {user.id ?\r\n                    <div style={{position:'fixed',width:'100%',zIndex:'10'}}>\r\n                    <Container > \r\n                      <Form className=\"d-flex\">\r\n                        <Form.Control\r\n                          type=\"search\"\r\n                          placeholder=\"Search\"\r\n                          className=\"me-2\"\r\n                          aria-label=\"Search\"\r\n                          style={{backgroundColor:'#131921',color:\"white\"}}\r\n                          onChange={(e)=>setSearch(e.target.value)}\r\n                          value={search}\r\n                          \r\n                          />\r\n                      </Form>\r\n                    </Container>\r\n                    </div>\r\n                    :\r\n                    \"\"\r\n                  }\r\n                    <ProductCardList products={filteredProducts} userId = {user.id}/>\r\n          </Route>\r\n\r\n          <Route path='/cart'>\r\n                <Cart customerId={user.id}/>\r\n          </Route>\r\n\r\n          <Route path='/profile'>\r\n            <Profile Name={user.name} Email={user.email}/>\r\n          </Route>\r\n\r\n          <Route path='/orderdone'>\r\n            <OrderDone userId={user.id}/>\r\n          </Route>\r\n          \r\n          {user.id?\r\n          <Route path='/products/:id' exact>\r\n            <Navigation cartItems={cartItems}/>\r\n            <ProductDetails userId={user.id}/>\r\n          </Route>\r\n          :\r\n          \"\"\r\n          }\r\n\r\n\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport loadUserSlice from './slices/loadUserSlice'\r\nimport routeChangeSlice  from './slices/routeSlice'\r\nimport displaySlice from './slices/displaySlice'\r\nimport cartItemsTotalSlice from './slices/cartItemsTotalSlice'\r\nexport const store = configureStore({\r\n  reducer: {\r\n    loadUser:loadUserSlice,\r\n    routeChange:routeChangeSlice,\r\n    changeDisplay:displaySlice,\r\n    changeCartTotal:cartItemsTotalSlice,\r\n\r\n  },\r\n}) ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}