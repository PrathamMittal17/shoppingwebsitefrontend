{"version":3,"sources":["slices/routeSlice.js","slices/loadUserSlice.js","slices/displaySlice.js","Components/NavigationBar/Navigation.js","slices/cartItemsTotalSlice.js","Components/ProductCard/ProductCard.js","Components/ProductCard/ProductCardList.js","Components/Cart/CartItem.js","Components/Cart/Cart.js","Components/Profile/Order.js","Components/Profile/MyOrders.js","Components/Profile/Profile.js","Components/Register/Register.js","Components/SignIn.js","Components/orderdone.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["routeChangeSlice","createSlice","name","initialState","route","reducers","changeRoute","state","action","payload","actions","loadUserSlice","user","loadUserAccount","Object","assign","displaySlice","display","changeDisplay","CustomToggle","React","forwardRef","ref","children","onClick","href","e","preventDefault","style","color","icon","faUser","fontSize","className","Navigation","cartItems","dispatch","useDispatch","useSelector","routeChange","Navbar","backgroundColor","variant","sticky","expand","Container","Brand","as","Link","to","Toggle","Collapse","id","Nav","gap","justifyContent","alignItems","faShoppingCart","fontWeight","marginLeft","Dropdown","Menu","textAlign","margin","Item","padding","localStorage","removeItem","cursor","cartItemsTotalSlice","total","IncreaseTotal","DecreaseTotal","SetTotal","ProductCard","image","productName","price","userId","status","useState","inCart","changeInCart","buttonDisable","changeButtonDisable","buttonVariant","changeButtonVariant","useEffect","i","length","product_id","cart_status","Card","width","borderRadius","Img","height","objectFit","src","Body","Title","Text","Button","disabled","fetch","method","headers","body","JSON","stringify","productId","customerId","operation","then","data","json","ProductCardList","products","setStatus","catch","err","console","log","map","product","img","brandName","brand_name","product_name","Spinner","animation","role","Alert","CartItem","index","quantity","custId","useContext","totalPriceContext","setTotalPrice","cartItemsContext","cartItemsData","setCartItemsData","qty","changeQty","cartItemId","flexWrap","alt","flexDirection","wordBreak","size","totalPrice","Number","faPlus","faMinus","splice","item_id","faTrashAlt","createContext","Cart","componentMounted","type","amount","session","a","loadStripe","redirectToCheckout","sessionId","ListGroup","Provider","value","cart_item_id","OrderItem","date","slice","MyOrders","orders","setOrders","getItem","parse","Data","order","ListGroupItem","Order","order_id","Profile","Name","Email","Register","email","setEmail","fname","setFname","lname","setLname","password","setPassword","Form","Group","controlId","Label","Control","placeholder","onChange","event","target","SignIn","OrderDone","orderItems","keys","App","setProducts","changeCartTotal","loadUser","search","setSearch","response","setItem","cart_items","LoginForm","filteredProducts","filter","toLowerCase","includes","exact","path","position","zIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d4fcd2c.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  route : 'loggedout',\r\n}\r\n\r\nexport const routeChangeSlice = createSlice({\r\n  name: 'routeChange',\r\n  initialState,\r\n  reducers: {\r\n   changeRoute: (state,action) => {\r\n      state.route = action.payload;\r\n      },\r\n    },\r\n}\r\n\r\n)\r\n\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { changeRoute} = routeChangeSlice.actions\r\n\r\nexport default routeChangeSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n  user: {},\r\n}\r\n\r\nexport const loadUserSlice = createSlice({\r\n  name: 'loadUser',\r\n  initialState,\r\n  reducers: {\r\n   loadUserAccount: (state, action) => {\r\n      return Object.assign({},state,{\r\n          user:action.payload\r\n          })\r\n      },\r\n    },\r\n}\r\n\r\n)\r\n\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { loadUserAccount} = loadUserSlice.actions\r\n\r\nexport default loadUserSlice.reducer","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  display : ' ',\r\n}\r\n\r\nexport const displaySlice = createSlice({\r\n  name: 'changeDisplay',\r\n  initialState,\r\n  reducers: {\r\n   changeDisplay: (state,action) => {\r\n      state.display = action.payload;\r\n      },\r\n    },\r\n}\r\n\r\n)\r\n\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { changeDisplay} = displaySlice.actions\r\n\r\nexport default displaySlice.reducer","import React from 'react'\r\nimport { Navbar,Nav,Container,Dropdown } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { useSelector ,useDispatch} from 'react-redux';\r\nimport { changeRoute } from '../../slices/routeSlice';\r\nimport { loadUserAccount } from '../../slices/loadUserSlice';\r\nimport { changeDisplay } from '../../slices/displaySlice';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser,faShoppingCart } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Navigation.css'\r\n\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <a\r\n      href=\"/dropdown\"\r\n      ref={ref}\r\n      onClick={e => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n      style={{color:'white'}}\r\n    >\r\n      <FontAwesomeIcon icon={faUser}  style={{fontSize:'1.75rem'}} className=\"hover-border\"/>\r\n      {children}\r\n    </a>\r\n  ));\r\n\r\nconst Navigation= ({cartItems}) => {\r\n    const dispatch = useDispatch();\r\n    const route = useSelector((state)=> state.routeChange.route);\r\n\r\n    return(\r\n        <Navbar  style={{backgroundColor:\"#131921\"}} variant=\"dark\" sticky=\"top\" expand=\"sm\">\r\n        <Container>\r\n        <Navbar.Brand as={Link} to=\"/\"><span className=\"brand-name h4\">Thrifty<span className=\"box-text\">Box</span></span></Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\" >\r\n            {route===\"loggedin\"\r\n            \r\n            ?\r\n            \r\n            <Nav className=\"ms-auto\" style={{gap:\"30px\",display:'flex',justifyContent:'center',alignItems:'center',}}>\r\n                <div style={{display:\"flex\"}} className=\"cart\">\r\n                    <Nav.Link as={Link} to=\"/cart\" style={{color:'white'}} className=\"hover-border\">\r\n                        <FontAwesomeIcon icon={faShoppingCart} style={{fontSize:'1.75rem'}} />\r\n                    </Nav.Link>\r\n                    <span style={{fontWeight:\"bold\",color:\"#F08804\",marginLeft:\"2.5px\"}}>{cartItems}</span>\r\n                </div>\r\n                    \r\n\r\n                    \r\n\r\n                        \r\n\r\n                    <Dropdown >\r\n                        <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\"/>\r\n                        \r\n                        <Dropdown.Menu style={{textAlign:'center',margin:\"15px -100px\"}}>\r\n\r\n                            <Dropdown.Item as={Link} to=\"/profile\" style={{color:'black',fontSize:'18px',padding:'10px'}} >\r\n                                    My Profile\r\n                            </Dropdown.Item>\r\n\r\n                            <Dropdown.Item as={Link}  style={{color:'black',fontSize:'18px',padding:'10px'}} to=\"\"onClick={()=>{\r\n                                    dispatch(loadUserAccount(' '));\r\n                                    dispatch(changeRoute(\"loggedout\"));\r\n                                    localStorage.removeItem(\"user\");\r\n                                    localStorage.removeItem(\"id\");\r\n                                    }} >\r\n                                    Sign Out\r\n                \r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n\r\n                    </Dropdown>\r\n\r\n                    \r\n                    \r\n\r\n\r\n                \r\n            </Nav>\r\n            :\r\n            <Nav className=\"ms-auto\" style={{gap:\"10px\"}}>\r\n                <Nav.Item style={{cursor:\"pointer\"}} onClick={()=>dispatch(changeDisplay('register'))}><h5 className=\"black\">Register</h5></Nav.Item>\r\n                <Nav.Item  style={{cursor:\"pointer\"}} onClick={()=>dispatch(changeDisplay('signin'))}><h5 className=\"black\">Sign In</h5></Nav.Item>\r\n            </Nav>\r\n            \r\n            }\r\n            \r\n        </Navbar.Collapse>\r\n        </Container>\r\n        </Navbar>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Navigation;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  total : null,\r\n}\r\n\r\nexport const cartItemsTotalSlice = createSlice({\r\n  name: 'changeCartTotal',\r\n  initialState,\r\n  reducers: {\r\n   IncreaseTotal: (state) => {\r\n      state.total += 1;\r\n      },\r\n   DecreaseTotal: (state) => {\r\n        state.total -= 1;\r\n        },\r\n   SetTotal: (state,action) => {\r\n          state.total = action.payload;\r\n          },\r\n    },\r\n}\r\n\r\n)\r\n\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { IncreaseTotal,DecreaseTotal,SetTotal} = cartItemsTotalSlice.actions\r\n\r\nexport default cartItemsTotalSlice.reducer","import React,{useEffect, useState} from 'react'\r\nimport {Card,Button} from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { IncreaseTotal } from '../../slices/cartItemsTotalSlice';\r\n\r\nconst ProductCard = ({id=0,image,productName,price,userId=0,status}) => {\r\n\r\n    const [inCart,changeInCart] = useState(\"Add To Cart\");\r\n    const [buttonDisable,changeButtonDisable] = useState(false);\r\n    const [buttonVariant,changeButtonVariant] = useState(\"primary\");\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(()=>{\r\n    if(status){\r\n      for(let i=0;i<status.length;i++){\r\n          if(status[i].product_id===id){\r\n              if(status[i].cart_status==='T'){\r\n                changeInCart(\"Item In Cart\");\r\n                changeButtonDisable(true);\r\n                changeButtonVariant(\"dark\");\r\n              }\r\n              \r\n          }\r\n      }\r\n    }\r\n    },[status,id]);\r\n\r\n    const addToCart=()=>{\r\n        changeInCart(\"Item In Cart\");\r\n        changeButtonDisable(true);\r\n        changeButtonVariant(\"dark\");\r\n        if(userId){\r\n            fetch(\"https://shopping-website-backend.adaptable.app/cart\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    productId:id,\r\n                    customerId:userId,\r\n                    status:'T'\r\n                })\r\n            })\r\n\r\n            fetch(\"https://shopping-website-backend.adaptable.app/carttotalitems\",{\r\n                method:\"put\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    \r\n                    customerId:userId,\r\n                    operation:\"I\"\r\n                    \r\n                })\r\n            })\r\n            .then(data=>data.json())\r\n            .then(dispatch(IncreaseTotal()))\r\n            \r\n        }\r\n    }\r\n    \r\n    return(\r\n        <Card style={{ width: '18rem', margin:'20px',borderRadius:\"15px\"}}>\r\n            <Card.Img style={{width:'100%',height:'30vh',objectFit:'scale-down',padding:'10px'}} variant=\"top\" src={image} />\r\n            <Card.Body>\r\n                <Card.Title>{productName}</Card.Title>\r\n                <Card.Text>\r\n                Rs.{price}\r\n                </Card.Text>\r\n                <Button disabled={buttonDisable} variant={buttonVariant} onClick={addToCart}>{inCart}</Button>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\nexport default ProductCard;\r\n","import React,{useState,useEffect} from 'react'\r\nimport { Spinner,Alert } from 'react-bootstrap';\r\nimport ProductCard from './ProductCard';\r\nimport './ProductCardList.css'\r\n\r\nconst ProductCardList = ({products,userId=0}) => {\r\n    \r\n    const [status,setStatus] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        \r\n        fetch(\"https://shopping-website-backend.adaptable.app/getitemcartstatus\",{\r\n            method:\"post\",\r\n            headers: {'Content-Type': 'application/json'},\r\n            body:JSON.stringify({\r\n                customerId:userId\r\n                \r\n               })\r\n        })\r\n        .then(data=>data.json())\r\n        .then(data=>setStatus(data))\r\n        .catch(err => console.log('Request Failed'));\r\n\r\n    },[userId])\r\n\r\n    if(userId){\r\n    \r\n    \r\n    if(products && status){\r\n    return(\r\n        <div className=\"ProductCardList\">\r\n            {\r\n                products.map((product,i)=>{\r\n                    \r\n                    return <ProductCard\r\n                        key={products[i].product_id}\r\n                        id={products[i].product_id}\r\n                        image={products[i].img}\r\n                        brandName={products[i].brand_name}\r\n                        productName={products[i].product_name}\r\n                        price={products[i].price}\r\n                       userId={userId}\r\n                       status={status}\r\n                    />\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n        }\r\n    else{\r\n        return(\r\n            <div style={{textAlign:'center',padding:'100px'}}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n            </div>\r\n        );\r\n    }\r\n    }\r\n    else{\r\n        return <Alert variant=\"primary\" style={{textAlign:'center'}}>Please Sign In/Register First</Alert>\r\n    }\r\n}\r\n\r\nexport default ProductCardList;","import React, { useContext,useState,useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus,faMinus, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Button} from 'react-bootstrap';\r\nimport { cartItemsContext,totalPriceContext } from \"./Cart\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DecreaseTotal } from \"../../slices/cartItemsTotalSlice\";\r\nconst CartItem = ({index,id,productName,price,img,quantity,custId}) =>{\r\n    \r\n    \r\n    const [,setTotalPrice] = useContext(totalPriceContext);\r\n    const[cartItemsData,setCartItemsData] = useContext(cartItemsContext);\r\n    const dispatch = useDispatch();\r\n    const [qty,changeQty] = useState(quantity);\r\n    \r\n   \r\n    \r\n    \r\n    useEffect(()=>{\r\n        fetch(\"https://shopping-website-backend.adaptable.app/updatecartitemqty\",{\r\n                                method:\"put\",\r\n                                headers: {'Content-Type': 'application/json'},\r\n                                body:JSON.stringify({\r\n                                    cartItemId:id,\r\n                                    qty:qty\r\n\r\n                                })\r\n                            })\r\n                            .catch(err => console.log('Request Failed'));\r\n\r\n       },[qty,id])\r\n\r\n\r\n   \r\n\r\n   \r\n    const deleteCartItem = () =>{\r\n\r\n        cartItemsData.splice(index,1)\r\n        setCartItemsData(cartItemsData)\r\n        setTotalPrice(totalPrice=>totalPrice-(Number(price)*qty))\r\n        fetch(\"https://shopping-website-backend.adaptable.app/removecartitem\",{\r\n                method:\"delete\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    item_id:id\r\n                })\r\n            })\r\n\r\n       \r\n\r\n       \r\n            \r\n\r\n        fetch(\"https://shopping-website-backend.adaptable.app/carttotalitems\",{\r\n                method:\"put\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    \r\n                    customerId:custId,\r\n                    operation:\"D\"\r\n                    \r\n                })\r\n            })\r\n            .then(data=>data.json())\r\n            .then(dispatch(DecreaseTotal()))\r\n \r\n      \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div style={{display:\"flex\",flexWrap:\"wrap\"}}>\r\n                <img src={img} alt=\"item\" style={{margin:\"5px\",width:\"100px\",height:\"100px\",objectFit:'scale-down'}}/>\r\n                <div style={{display:\"flex\",flexDirection:\"column\",wordBreak:\"break-all\"}}>\r\n                    <h3 style={{margin:\"5px\"}}>{productName}</h3>\r\n                    <h3 style={{margin:\"5px\"}}>Rs.{price*qty}</h3>\r\n                </div>\r\n            </div>\r\n            <div style={{display:\"flex\",justifyContent:\"flex-end\",alignItems:\"center\"}}>\r\n                <Button size=\"sm\" variant=\"outline-primary\" style={{margin:\"20px\"}} onClick={()=>{\r\n                    if(qty<4){\r\n                        changeQty(qty+1)\r\n                        setTotalPrice(totalPrice=>totalPrice+Number(price))\r\n\r\n                        \r\n                    }\r\n\r\n                }}>\r\n                    <FontAwesomeIcon size=\"lg\" style={{fontSize:\"1rem\"}}icon={faPlus} />\r\n                </Button>\r\n                <h4>{qty}</h4>\r\n                <Button size=\"sm\" variant=\"outline-primary\" style={{margin:\"20px\"}} onClick={()=>{\r\n                    if(qty>1){\r\n                        changeQty(qty-1);\r\n                        setTotalPrice(totalPrice=>totalPrice-Number(price))\r\n                    }\r\n\r\n                       \r\n                }}>\r\n                        <FontAwesomeIcon size=\"lg\" style={{fontSize:\"1rem\"}}icon={faMinus} />\r\n                </Button>\r\n\r\n                <Button size=\"md\" variant=\"outline-danger\" style={{margin:\"10px\"}} onClick={deleteCartItem}>\r\n                    <FontAwesomeIcon size=\"lg\" style={{fontSize:\"1rem\"}}icon={faTrashAlt} />\r\n                </Button>\r\n                \r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default CartItem;","import React,{useState,useEffect, createContext} from \"react\";\r\nimport CartItem from \"./CartItem\";\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { ListGroup,Button,Spinner,Navbar } from \"react-bootstrap\";\r\nconst totalPriceContext = createContext();\r\nconst cartItemsContext = createContext();\r\nconst Cart = ({customerId=0}) =>{\r\n\r\n    const[cartItemsData,setCartItemsData] = useState(null);\r\n    const[totalPrice,setTotalPrice] = useState(0);\r\n    useEffect(() => {\r\n        let componentMounted = true;\r\n\r\n        fetch(\"https://shopping-website-backend.adaptable.app/cartitem\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    customerId:customerId\r\n                })\r\n            })\r\n            .then(data=>data.json())\r\n            .then(product=>{\r\n                if(componentMounted){\r\n                    setCartItemsData(product)\r\n                }\r\n            })\r\n            .catch(err => console.log('Request Failed'))\r\n            return () => {\r\n                componentMounted = false;\r\n               }\r\n\r\n        }, [customerId]);\r\n\r\n    \r\n\r\n    if(cartItemsData){\r\n            if(cartItemsData.length>0){\r\n                return(\r\n                <div>\r\n                    <Navbar  sticky=\"top\" expand=\"lg\" style={{display:'flex',justifyContent:'center',backgroundColor:\"#131921\",padding:\"10px\" }}>\r\n                        \r\n                        <h3 id=\"totalPrice\" style={{color:\"white\"}}>Total: Rs.{totalPrice}</h3>\r\n                        <Button type=\"submit\" style={{marginLeft:\"10px\"}} onClick={()=>{\r\n                            fetch(\"https://shopping-website-backend.adaptable.app/create-checkout-session\",{\r\n                                method:\"post\",\r\n                                headers: {'Content-Type': 'application/json'},\r\n                                body:JSON.stringify({\r\n                                    amount:totalPrice*100\r\n                                })\r\n                            })\r\n                            .then(data=>data.json())\r\n                            .then(async session=>{\r\n                                const stripe = await loadStripe('pk_test_51JmIXVSBM1qtXmvlx74yuerGEmGuKSxOQ7Ej0XDdZrpZQFasZ4XObY9hCWjeQEXA5GDH1QBgPShHtdlKKJBBYCE400KZp54zhq');\r\n                                stripe.redirectToCheckout({sessionId:session.id})\r\n                                \r\n                            }\r\n                            )\r\n                        }}>Checkout</Button>\r\n                \r\n                    </Navbar>\r\n                <ListGroup style={{padding:\"5px\"}}>\r\n                    \r\n\r\n                {cartItemsData.map((product,i)=>{\r\n                    if(totalPrice===0){\r\n                        setTotalPrice(totalPrice=>totalPrice+(cartItemsData[i].price*cartItemsData[i].qty))\r\n                    }\r\n\r\n                        return (\r\n                            \r\n                            <ListGroup.Item key={i} style={{borderRadius:\"15px\"}}>\r\n                                \r\n                                        <totalPriceContext.Provider value={[totalPrice,setTotalPrice]}>\r\n                                            <cartItemsContext.Provider value={[cartItemsData,setCartItemsData]}>\r\n                                                <CartItem\r\n                                                    index = {i}\r\n                                                    key={cartItemsData[i].cart_item_id}\r\n                                                    id={cartItemsData[i].cart_item_id}\r\n                                                    productName={cartItemsData[i].product_name}\r\n                                                    price={cartItemsData[i].price}\r\n                                                    img = {cartItemsData[i].img}\r\n                                                    quantity = {cartItemsData[i].qty}\r\n                                                    custId={customerId}\r\n                                                />\r\n                                            </cartItemsContext.Provider>\r\n                                        </totalPriceContext.Provider>\r\n                                \r\n                            \r\n                    </ListGroup.Item>\r\n                    \r\n                    );\r\n\r\n                \r\n                })\r\n        }\r\n\r\n        \r\n\r\n    </ListGroup>\r\n    </div>\r\n    \r\n    );\r\n\r\n    }\r\n    else if(cartItemsData.length===0){\r\n        return <h1 style={{textAlign:\"center\"}}>Cart is empty</h1>;\r\n    }\r\n}\r\nelse{\r\n    return (\r\n        <div style={{textAlign:'center',padding:'100px'}}>\r\n        <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n       \r\n        \r\n       \r\n    \r\n}\r\n\r\n\r\nexport default Cart;\r\nexport {totalPriceContext};\r\nexport {cartItemsContext};","import React from \"react\";\r\n\r\nconst OrderItem=({id,product_name,qty,img,price,date})=>{\r\n\r\n    return(\r\n        <>\r\n        <h3>Order ID: {id}</h3>\r\n        <h3>Purchased on : {date.slice(0,10)}</h3>\r\n        <div style={{display:\"flex\",flexWrap:\"wrap\"}}>\r\n                <img src={img} alt=\"item\" style={{margin:\"10px\",width:\"100px\",height:\"100px\",objectFit:'scale-down'}}/>\r\n                <div style={{display:\"flex\",flexDirection:\"column\",wordBreak:\"break-word\"}}>\r\n                    <h3 >{product_name}</h3>\r\n                    <h3>Qty:{qty}</h3>\r\n                    <h3>Rs.{price}</h3>\r\n                </div>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrderItem;","import React, { useEffect, useState } from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport OrderItem from \"./Order\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nconst MyOrders=()=>{\r\n\r\n    const [orders,setOrders] = useState(null);\r\n    useEffect(()=>{\r\n        let componentMounted = true;\r\n\r\n        const user = localStorage.getItem(\"user\");\r\n        const userId = JSON.parse(user).id;\r\n        fetch(\"https://shopping-website-backend.adaptable.app/gettingOrder\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    custId:userId\r\n                })\r\n            })\r\n        .then(Data=>Data.json())\r\n        .then(data=>{\r\n            if(componentMounted){\r\n            setOrders(data)\r\n            }\r\n        })\r\n        .catch(err => console.log('Request Failed'));\r\n\r\n\r\n        return () => {\r\n            componentMounted = false;\r\n           }\r\n        },[])\r\n\r\n        \r\n        if(orders){\r\n    if(orders.length===0){\r\n        \r\n        return (\r\n            <>\r\n            <h3>You Have No Orders!</h3>\r\n            <Link to=\"/\"><h2 style={{textAlign:\"center\"}}>Continue Shopping</h2></Link>\r\n            </>\r\n        );\r\n    }\r\n    else{\r\n        \r\n    return (\r\n        <>\r\n        <h3>Your Orders:</h3>\r\n       <ListGroup>\r\n           {orders.map((order,i)=>{\r\n                return <ListGroupItem style={{borderRadius:\"15px\"}}key = {orders[i].order_id}>\r\n                            <OrderItem\r\n                                key = {orders[i].order_id}\r\n                                id = {orders[i].order_id}\r\n                                product_name={orders[i].product_name}\r\n                                img = {orders[i].img}\r\n                                price = {orders[i].price}\r\n                                qty = {orders[i].qty}\r\n                                date = {orders[i].date}\r\n                            />\r\n                    </ListGroupItem>\r\n       })\r\n    }\r\n\r\n    </ListGroup>\r\n    </>\r\n    \r\n    \r\n     );\r\n    }\r\n}\r\nelse{\r\n    return (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n    );\r\n}\r\n}\r\n\r\nexport default MyOrders;","import React from \"react\";\r\nimport MyOrders from \"./MyOrders\";\r\n\r\n\r\nconst Profile = ({Name,Email}) =>{\r\n    \r\n    return(\r\n       \r\n        <div style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",padding:\"20px\"}}>\r\n            \r\n            <h3>Name: {Name}</h3>\r\n            <h3 style={{wordBreak:\"break-word\"}}>Email: {Email}</h3>\r\n            <MyOrders/>            \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Profile;","import React,{useState} from \"react\";\r\nimport { Form,Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport './Register.css'\r\nimport { loadUserAccount } from \"../../slices/loadUserSlice\";\r\nimport { changeRoute } from \"../../slices/routeSlice\";\r\nimport { changeDisplay } from \"../../slices/displaySlice\";\r\n\r\nconst Register=()=>{\r\n    /* eslint-disable no-unused-vars */\r\n\r\n    const[email,setEmail] = useState('');\r\n    const[fname,setFname] = useState('');\r\n    const[lname,setLname] = useState('');\r\n    const[password,setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    const submitRegister = ()=>{\r\n        fetch(\"https://shopping-website-backend.adaptable.app/register\",{\r\n            method:\"post\",\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                fname:fname,\r\n                lname:lname,\r\n                email:email,\r\n                password:password\r\n            })\r\n        })\r\n        .then(data=>data.json())\r\n        .then(user=>{\r\n            if(user.id){\r\n                dispatch(changeRoute(\"loggedin\"));\r\n                dispatch(changeDisplay(' '));\r\n                dispatch(loadUserAccount(user));\r\n\r\n            }\r\n        })\r\n        .catch(err => console.log('Request Failed'));\r\n\r\n    }\r\n\r\n    const changeEmail = (event) =>{\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const changeFname = (event) =>{\r\n        setFname(event.target.value);\r\n    }\r\n    \r\n    const changeLname = (event) =>{\r\n        setLname(event.target.value);\r\n    }\r\n\r\n    const changePassword = (event) =>{\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n   \r\n    return(\r\n        <Form >\r\n            <Form.Group className=\"mb-3\" controlId=\"fname\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter First Name:\" onChange={changeFname} />\r\n                \r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"lname\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter Last Name:\" onChange={changeLname}/>\r\n                \r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                <Form.Label>Email Address:</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter Email Address:\" onChange={changeEmail} />\r\n                \r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                <Form.Label>Password:</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Enter Password:\" onChange={changePassword}/>\r\n               \r\n            </Form.Group>\r\n            <Button variant=\"primary\" onClick={submitRegister}>\r\n                Register\r\n            </Button>\r\n\r\n        </Form>\r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default Register;","import React,{useState} from \"react\";\r\nimport { Form,Button } from \"react-bootstrap\";\r\nimport './Register/Register.css';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loadUserAccount } from \"../slices/loadUserSlice\";\r\nimport { changeRoute } from \"../slices/routeSlice\";\r\nimport { changeDisplay } from \"../slices/displaySlice\";\r\nconst SignIn=()=>{\r\n    /* eslint-disable no-unused-vars */\r\n\r\n    const[email,setEmail] = useState('');\r\n    const[password,setPassword] = useState('');\r\n/* eslint-disable no-unused-vars */\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const changeEmail = (event) =>{\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    const changePassword = (event) =>{\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    const login = ()=>{\r\n        fetch(\"https://shopping-website-backend.adaptable.app/login\",{\r\n            method:\"post\",\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                email:email,\r\n                password:password\r\n            })\r\n        })\r\n        .then(data=>data.json())\r\n        .then(user=>{\r\n            if(user.id){\r\n                dispatch(changeRoute(\"loggedout\"));\r\n                dispatch(changeDisplay(' '));\r\n                dispatch(loadUserAccount(user));\r\n            }\r\n        })\r\n        .catch(err => console.log('Request Failed'));\r\n\r\n    }\r\n    return(\r\n        <Form >\r\n            \r\n            \r\n            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                <Form.Label>Email Address:</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter Email Address:\" onChange={changeEmail}/>\r\n                \r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"password\">\r\n                <Form.Label>Password:</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Enter Password:\" onChange={changePassword}/>\r\n                \r\n            </Form.Group>\r\n            <Button variant=\"primary\" onClick={login}>\r\n                Sign In\r\n            </Button>\r\n\r\n        </Form>\r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default SignIn;","import React,{useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst OrderDone=({userId})=>{\r\n    useEffect(() => {\r\n        \r\n        const orderItems = {};\r\n        fetch(\"https://shopping-website-backend.adaptable.app/cartitem\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    customerId:userId\r\n                })\r\n            })\r\n        .then(data=>data.json())\r\n        .then(cartItems=>{\r\n            Object.assign(orderItems,cartItems)\r\n        Object.keys(orderItems).map((i)=>{\r\n                    return fetch(\"https://shopping-website-backend.adaptable.app/creatingOrder\",{\r\n                        method:\"post\",\r\n                        headers: {'Content-Type': 'application/json'},\r\n                        body:JSON.stringify({\r\n                            custId:userId,\r\n                            productName:orderItems[i].product_name,\r\n                            qty:orderItems[i].qty,\r\n                            price:orderItems[i].price*orderItems[i].qty,\r\n                            img:orderItems[i].img,\r\n                            \r\n                        })\r\n                    })\r\n                })\r\n            \r\n        })\r\n        .catch(err => console.log('Request Failed'));\r\n\r\n        \r\n    \r\n    }, [userId])\r\n    return(\r\n        <>\r\n            <h1 style={{textAlign:\"center\"}}>Your Order Is successful</h1>\r\n            <Link to=\"/\"><h2 style={{textAlign:\"center\"}}>Continue Shopping</h2></Link>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrderDone;","import './App.css';\r\nimport { useState, useEffect } from 'react';\r\nimport {Form, Container} from 'react-bootstrap';\r\nimport Navigation from './Components/NavigationBar/Navigation'\r\nimport {HashRouter,Route,Switch} from 'react-router-dom';\r\nimport ProductCardList from './Components/ProductCard/ProductCardList';\r\nimport Cart from './Components/Cart/Cart';\r\nimport Profile from './Components/Profile/Profile';\r\nimport Register from './Components/Register/Register';\r\nimport SignIn from './Components/SignIn';\r\nimport OrderDone from './Components/orderdone';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { loadUserAccount } from './slices/loadUserSlice';\r\nimport { changeRoute } from './slices/routeSlice';\r\nimport { changeDisplay } from './slices/displaySlice';\r\nimport { SetTotal } from './slices/cartItemsTotalSlice';\r\nimport ProductDetails from './Components/ProductCard/ProductDetails';\r\n\r\n\r\nconst App=()=> {\r\n\r\n  const display = useSelector((state)=>state.changeDisplay.display)\r\n  const [products,setProducts] = useState(null);\r\n  const cartItems = useSelector((state)=>state.changeCartTotal.total);\r\n  const user = useSelector((state) => state.loadUser.user);\r\n  const [search,setSearch] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"user\") != null){\r\n      dispatch(loadUserAccount(JSON.parse(localStorage.getItem(\"user\"))))\r\n    }\r\n    \r\n    fetch(\"https://shopping-website-backend.adaptable.app/products\")\r\n    .then(response=>response.json())\r\n    .then(data=>setProducts(data))\r\n    .catch(err => console.log('Request Failed'));\r\n    \r\n    \r\n      \r\n}, [dispatch])\r\n\r\n\r\nuseEffect(() => {\r\n  if(user.id){\r\n\r\n    dispatch(changeRoute(\"loggedin\"));\r\n    dispatch(changeDisplay(' '));\r\n    localStorage.setItem(\"user\",JSON.stringify({id:user.id,email:user.email,name:user.name}));\r\n    \r\n    fetch(\"https://shopping-website-backend.adaptable.app/getCartTotalItems\",{\r\n                method:\"post\",\r\n                headers: {'Content-Type': 'application/json'},\r\n                body:JSON.stringify({\r\n                    \r\n                  custId:user.id\r\n                    \r\n                })\r\n            })\r\n        .then(data=>data.json())\r\n        .then(total=>dispatch(SetTotal(total.cart_items)))\r\n        .catch(err => console.log('Request Failed'));\r\n\r\n        \r\n  }\r\n  \r\n}, [user,dispatch])\r\n\r\n\r\n\r\n  let LoginForm = '';\r\n  \r\n  if(display===\"register\"){\r\n    LoginForm=<Register/>\r\n  }\r\n  else if(display===\"signin\"){\r\n    LoginForm=<SignIn/>\r\n  }\r\n\r\n  \r\n    const filteredProducts = products?.filter(product=>{\r\n      return product.product_name.toLowerCase().includes(search?.toLowerCase());\r\n    })\r\n    \r\n    \r\n  \r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path='/'>\r\n                    <Navigation cartItems={cartItems}/>\r\n                    {LoginForm}\r\n                    {user.id ?\r\n                    <div style={{position:'fixed',width:'100%',zIndex:'10'}}>\r\n                    <Container > \r\n                      <Form className=\"d-flex\">\r\n                        <Form.Control\r\n                          type=\"search\"\r\n                          placeholder=\"Search\"\r\n                          className=\"me-2\"\r\n                          aria-label=\"Search\"\r\n                          style={{backgroundColor:'#131921',color:\"white\"}}\r\n                          onChange={(e)=>setSearch(e.target.value)}\r\n                          value={search}\r\n                          \r\n                          />\r\n                      </Form>\r\n                    </Container>\r\n                    </div>\r\n                    :\r\n                    \"\"\r\n                  }\r\n                    <ProductCardList products={filteredProducts} userId = {user.id}/>\r\n          </Route>\r\n\r\n          <Route path='/cart'>\r\n                <Cart customerId={user.id}/>\r\n          </Route>\r\n\r\n          <Route path='/profile'>\r\n            <Profile Name={user.name} Email={user.email}/>\r\n          </Route>\r\n\r\n          <Route path='/orderdone'>\r\n            <OrderDone userId={user.id}/>\r\n          </Route>\r\n\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport loadUserSlice from './slices/loadUserSlice'\r\nimport routeChangeSlice  from './slices/routeSlice'\r\nimport displaySlice from './slices/displaySlice'\r\nimport cartItemsTotalSlice from './slices/cartItemsTotalSlice'\r\nexport const store = configureStore({\r\n  reducer: {\r\n    loadUser:loadUserSlice,\r\n    routeChange:routeChangeSlice,\r\n    changeDisplay:displaySlice,\r\n    changeCartTotal:cartItemsTotalSlice,\r\n\r\n  },\r\n}) ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}